[{"title":"九种跨域方式实现原理","url":"http://tanlent.coding.me/九种跨域方式实现原理/","content":"<h4 id=\"什么是跨域？\"><a href=\"#什么是跨域？\" class=\"headerlink\" title=\"什么是跨域？\"></a>什么是跨域？</h4><h6 id=\"什么是同源策略及其限制内容？\"><a href=\"#什么是同源策略及其限制内容？\" class=\"headerlink\" title=\"什么是同源策略及其限制内容？\"></a>什么是同源策略及其限制内容？</h6><p>同源策略是一种约定，它是浏览器核心也最基本的安全功能，如果缺少了同源策略，浏览器很容易受到XSS、CSFR等攻击。所谓同源是指“协议+域名+端口”三者相同，即便两个不同的域名指向同一个ip地址，也非同源。</p>\n<p><img src=\"/images/九种跨域方式实现原理/01.png\" alt=\"\"></p>\n<p>同源策略限制内容有：</p>\n<ul>\n<li>Cookie、LocalStorage、IndexedDB 等存储性内容</li>\n<li>DOM 节点</li>\n<li>AJAX 请求发送后，结果被浏览器拦截了</li>\n</ul>\n<p>但是有三个标签是允许跨域加载资源：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- &lt;img src=XXX&gt;</span><br><span class=\"line\">- &lt;link href=XXX&gt;</span><br><span class=\"line\">- &lt;script src=XXX&gt;</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"常见跨域场景\"><a href=\"#常见跨域场景\" class=\"headerlink\" title=\"常见跨域场景\"></a>常见跨域场景</h6><p>当协议、子域名、主域名、端口号中任意一个不相同时，都算作不同域。不同域之间相互请求资源，就算作“跨域”。常见跨域场景如下图所示：</p>\n<p><img src=\"/images/九种跨域方式实现原理/02.png\" alt=\"\"></p>\n<p>特别说明两点：</p>\n<ol>\n<li>如果是协议和端口造成的跨域问题“前台”是无能为力的。</li>\n<li>在跨域问题上，仅仅是通过“URL的首部”来识别而不会根据域名对应的IP地址是否相同来判断。“URL的首部”可以理解为“协议, 域名和端口必须匹配”。</li>\n</ol>\n<p>这里你或许有个疑问：请求跨域了，那么请求到底发出去没有？<br>跨域并不是请求发不出去，请求能发出去，服务端能收到请求并正常返回结果，只是结果被浏览器拦截了。你可能会疑问明明通过表单的方式可以发起跨域请求，为什么 Ajax 就不会?因为归根结底，跨域是为了阻止用户读取到另一个域名下的内容，Ajax 可以获取响应，浏览器认为这不安全，所以拦截了响应。但是表单并不会获取新的内容，所以可以发起跨域请求。同时也说明了跨域并不能完全阻止 CSRF，因为请求毕竟是发出去了。</p>\n<h4 id=\"跨域解决方案\"><a href=\"#跨域解决方案\" class=\"headerlink\" title=\"跨域解决方案\"></a>跨域解决方案</h4><h6 id=\"一、jsonp\"><a href=\"#一、jsonp\" class=\"headerlink\" title=\"一、jsonp\"></a>一、jsonp</h6><ol>\n<li>JSONP原理</li>\n</ol>\n<p>利用 <script> 标签没有跨域限制的漏洞，网页可以得到从其他来源动态产生的 JSON 数据。JSONP请求一定需要对方的服务器做支持才可以。</p>\n<ol start=\"2\">\n<li>JSONP和AJAX对比</li>\n</ol>\n<p>JSONP和AJAX相同，都是客户端向服务器端发送请求，从服务器端获取数据的方式。但AJAX属于同源策略，JSONP属于非同源策略（跨域请求）</p>\n<ol start=\"3\">\n<li>JSONP优缺点</li>\n</ol>\n<p>JSONP优点是简单兼容性好，可用于解决主流浏览器的跨域数据访问的问题。缺点是仅支持get方法具有局限性,不安全可能会遭受XSS攻击。</p>\n<ol start=\"4\">\n<li>JSONP的实现流程</li>\n</ol>\n<ul>\n<li>声明一个回调函数，其函数名(如show)当做参数值，要传递给跨域请求数据的服务器，函数形参为要获取目标数据(服务器返回的data)。</li>\n<li>创建一个<script>标签，把那个跨域的API数据接口地址，赋值给script的src,还要在这个地址中向服务器传递该函数名（可以通过问号传参:?callback=show）。</li>\n<li>服务器接收到请求后，需要进行特殊的处理：把传递进来的函数名和它需要给你的数据拼接成一个字符串,例如：传递进去的函数名是show，它准备好的数据是show(‘我不爱你’)。</li>\n<li>最后服务器把准备的数据通过HTTP协议返回给客户端，客户端再调用执行之前声明的回调函数（show），对返回的数据进行操作。</li>\n</ul>\n<p>在开发中可能会遇到多个 JSONP 请求的回调函数名是相同的，这时候就需要自己封装一个 JSONP函数。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// index.html</span><br><span class=\"line\">function jsonp(&#123; url, params, callback &#125;) &#123;</span><br><span class=\"line\">  return new Promise((resolve, reject) =&gt; &#123;</span><br><span class=\"line\">    let script = document.createElement(&apos;script&apos;)</span><br><span class=\"line\">    window[callback] = function(data) &#123;</span><br><span class=\"line\">      resolve(data)</span><br><span class=\"line\">      document.body.removeChild(script)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    params = &#123; ...params, callback &#125; // wd=b&amp;callback=show</span><br><span class=\"line\">    let arrs = []</span><br><span class=\"line\">    for (let key in params) &#123;</span><br><span class=\"line\">      arrs.push(`$&#123;key&#125;=$&#123;params[key]&#125;`)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    script.src = `$&#123;url&#125;?$&#123;arrs.join(&apos;&amp;&apos;)&#125;`</span><br><span class=\"line\">    document.body.appendChild(script)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">jsonp(&#123;</span><br><span class=\"line\">  url: &apos;http://localhost:3000/say&apos;,</span><br><span class=\"line\">  params: &#123; wd: &apos;Iloveyou&apos; &#125;,</span><br><span class=\"line\">  callback: &apos;show&apos;</span><br><span class=\"line\">&#125;).then(data =&gt; &#123;</span><br><span class=\"line\">  console.log(data)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<p>上面这段代码相当于向<a href=\"http://localhost:3000/say?wd=Iloveyou&amp;callback=show这个地址请求数据，然后后台返回show(&#39;我不爱你&#39;)，最后会运行show()这个函数，打印出&#39;我不爱你&#39;\">http://localhost:3000/say?wd=Iloveyou&amp;callback=show这个地址请求数据，然后后台返回show(&#39;我不爱你&#39;)，最后会运行show()这个函数，打印出&#39;我不爱你&#39;</a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// server.js</span><br><span class=\"line\">let express = require(&apos;express&apos;)</span><br><span class=\"line\">let app = express()</span><br><span class=\"line\">app.get(&apos;/say&apos;, function(req, res) &#123;</span><br><span class=\"line\">  let &#123; wd, callback &#125; = req.query</span><br><span class=\"line\">  console.log(wd) // Iloveyou</span><br><span class=\"line\">  console.log(callback) // show</span><br><span class=\"line\">  res.end(`$&#123;callback&#125;(&apos;我不爱你&apos;)`)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">app.listen(3000)</span><br></pre></td></tr></table></figure></p>\n<ol start=\"4\">\n<li>jQuery的jsonp形式</li>\n</ol>\n<p>JSONP都是GET和异步请求的，不存在其他的请求方式和同步请求，且jQuery默认就会给JSONP的请求清除缓存。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$.ajax(&#123;</span><br><span class=\"line\">url:&quot;http://crossdomain.com/jsonServerResponse&quot;,</span><br><span class=\"line\">dataType:&quot;jsonp&quot;,</span><br><span class=\"line\">type:&quot;get&quot;,//可以省略</span><br><span class=\"line\">jsonpCallback:&quot;show&quot;,//-&gt;自定义传递给服务器的函数名，而不是使用jQuery自动生成的，可省略</span><br><span class=\"line\">jsonp:&quot;callback&quot;,//-&gt;把传递函数名的那个形参callback，可省略</span><br><span class=\"line\">success:function (data)&#123;</span><br><span class=\"line\">console.log(data);&#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"二、cors\"><a href=\"#二、cors\" class=\"headerlink\" title=\"二、cors\"></a>二、cors</h6><p>CORS 需要浏览器和后端同时支持。IE 8 和 9 需要通过 XDomainRequest 来实现。</p>\n<p>浏览器会自动进行 CORS 通信，实现 CORS 通信的关键是后端。只要后端实现了 CORS，就实现了跨域。</p>\n<p>服务端设置 Access-Control-Allow-Origin 就可以开启 CORS。 该属性表示哪些域名可以访问资源，如果设置通配符则表示所有网站都可以访问资源。</p>\n<p>虽然设置 CORS 和前端没什么关系，但是通过这种方式解决跨域问题的话，会在发送请求时出现两种情况，分别为简单请求和复杂请求。</p>\n<ol>\n<li>简单请求</li>\n</ol>\n<p>只要同时满足以下两大条件，就属于简单请求</p>\n<p>条件1：使用下列方法之一：</p>\n<ul>\n<li>GET</li>\n<li>HEAD</li>\n<li>POST</li>\n</ul>\n<p>条件2：Content-Type 的值仅限于下列三者之一：</p>\n<ul>\n<li>text/plain</li>\n<li>multipart/form-data</li>\n<li>application/x-www-form-urlencoded</li>\n</ul>\n<p>请求中的任意 XMLHttpRequestUpload 对象均没有注册任何事件监听器； XMLHttpRequestUpload 对象可以使用 XMLHttpRequest.upload 属性访问。</p>\n<ol start=\"2\">\n<li>复杂请求</li>\n</ol>\n<p>不符合以上条件的请求就肯定是复杂请求了。 复杂请求的CORS请求，会在正式通信之前，增加一次HTTP查询请求，称为”预检”请求,该请求是 option 方法的，通过该请求来知道服务端是否允许跨域请求。</p>\n<p>我们用PUT向后台请求时，属于复杂请求，后台需做如下配置：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 允许哪个方法访问我</span><br><span class=\"line\">res.setHeader(&apos;Access-Control-Allow-Methods&apos;, &apos;PUT&apos;)</span><br><span class=\"line\">// 预检的存活时间</span><br><span class=\"line\">res.setHeader(&apos;Access-Control-Max-Age&apos;, 6)</span><br><span class=\"line\">// OPTIONS请求不做任何处理</span><br><span class=\"line\">if (req.method === &apos;OPTIONS&apos;) &#123;</span><br><span class=\"line\">  res.end() </span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// 定义后台返回的内容</span><br><span class=\"line\">app.put(&apos;/getData&apos;, function(req, res) &#123;</span><br><span class=\"line\">  console.log(req.headers)</span><br><span class=\"line\">  res.end(&apos;我不爱你&apos;)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<p>接下来我们看下一个完整复杂请求的例子，并且介绍下CORS请求相关的字段<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// index.html</span><br><span class=\"line\">let xhr = new XMLHttpRequest()</span><br><span class=\"line\">document.cookie = &apos;name=xiamen&apos; // cookie不能跨域</span><br><span class=\"line\">xhr.withCredentials = true // 前端设置是否带cookie</span><br><span class=\"line\">xhr.open(&apos;PUT&apos;, &apos;http://localhost:4000/getData&apos;, true)</span><br><span class=\"line\">xhr.setRequestHeader(&apos;name&apos;, &apos;xiamen&apos;)</span><br><span class=\"line\">xhr.onreadystatechange = function() &#123;</span><br><span class=\"line\">  if (xhr.readyState === 4) &#123;</span><br><span class=\"line\">    if ((xhr.status &gt;= 200 &amp;&amp; xhr.status &lt; 300) || xhr.status === 304) &#123;</span><br><span class=\"line\">      console.log(xhr.response)</span><br><span class=\"line\">      //得到响应头，后台需设置Access-Control-Expose-Headers</span><br><span class=\"line\">      console.log(xhr.getResponseHeader(&apos;name&apos;))</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">xhr.send()</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//server1.js</span><br><span class=\"line\">let express = require(&apos;express&apos;);</span><br><span class=\"line\">let app = express();</span><br><span class=\"line\">app.use(express.static(__dirname));</span><br><span class=\"line\">app.listen(3000);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//server2.js</span><br><span class=\"line\">let express = require(&apos;express&apos;)</span><br><span class=\"line\">let app = express()</span><br><span class=\"line\">let whitList = [&apos;http://localhost:3000&apos;] //设置白名单</span><br><span class=\"line\">app.use(function(req, res, next) &#123;</span><br><span class=\"line\">  let origin = req.headers.origin</span><br><span class=\"line\">  if (whitList.includes(origin)) &#123;</span><br><span class=\"line\">    // 设置哪个源可以访问我</span><br><span class=\"line\">    res.setHeader(&apos;Access-Control-Allow-Origin&apos;, origin)</span><br><span class=\"line\">    // 允许携带哪个头访问我</span><br><span class=\"line\">    res.setHeader(&apos;Access-Control-Allow-Headers&apos;, &apos;name&apos;)</span><br><span class=\"line\">    // 允许哪个方法访问我</span><br><span class=\"line\">    res.setHeader(&apos;Access-Control-Allow-Methods&apos;, &apos;PUT&apos;)</span><br><span class=\"line\">    // 允许携带cookie</span><br><span class=\"line\">    res.setHeader(&apos;Access-Control-Allow-Credentials&apos;, true)</span><br><span class=\"line\">    // 预检的存活时间</span><br><span class=\"line\">    res.setHeader(&apos;Access-Control-Max-Age&apos;, 6)</span><br><span class=\"line\">    // 允许返回的头</span><br><span class=\"line\">    res.setHeader(&apos;Access-Control-Expose-Headers&apos;, &apos;name&apos;)</span><br><span class=\"line\">    if (req.method === &apos;OPTIONS&apos;) &#123;</span><br><span class=\"line\">      res.end() // OPTIONS请求不做任何处理</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  next()</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">app.put(&apos;/getData&apos;, function(req, res) &#123;</span><br><span class=\"line\">  console.log(req.headers)</span><br><span class=\"line\">  res.setHeader(&apos;name&apos;, &apos;jw&apos;) //返回一个响应头，后台需设置</span><br><span class=\"line\">  res.end(&apos;我不爱你&apos;)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">app.get(&apos;/getData&apos;, function(req, res) &#123;</span><br><span class=\"line\">  console.log(req.headers)</span><br><span class=\"line\">  res.end(&apos;我不爱你&apos;)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">app.use(express.static(__dirname))</span><br><span class=\"line\">app.listen(4000)</span><br></pre></td></tr></table></figure>\n<p>上述代码由<a href=\"http://localhost:3000/index.html向http://localhost:4000/跨域请求，正如我们上面所说的，后端是实现\">http://localhost:3000/index.html向http://localhost:4000/跨域请求，正如我们上面所说的，后端是实现</a> CORS 通信的关键。</p>\n<h4 id=\"三、postMessage\"><a href=\"#三、postMessage\" class=\"headerlink\" title=\"三、postMessage\"></a>三、postMessage</h4><p>postMessage是HTML5 XMLHttpRequest Level 2中的API，且是为数不多可以跨域操作的window属性之一，它可用于解决以下方面的问题：</p>\n<ul>\n<li>页面和其打开的新窗口的数据传递</li>\n<li>多窗口之间消息传递</li>\n<li>页面与嵌套的iframe消息传递</li>\n<li>上面三个场景的跨域数据传递</li>\n</ul>\n<p>postMessage()方法允许来自不同源的脚本采用异步方式进行有限的通信，可以实现跨文本档、多窗口、跨域消息传递。</p>\n<blockquote>\n<p>otherWindow.postMessage(message, targetOrigin, [transfer]);</p>\n</blockquote>\n<ul>\n<li>message: 将要发送到其他 window的数据。</li>\n<li>targetOrigin:通过窗口的origin属性来指定哪些窗口能接收到消息事件，其值可以是字符串”*”（表示无限制）或者一个URI。在发送消息的时候，如果目标窗口的协议、主机地址或端口这三者的任意一项不匹配targetOrigin提供的值，那么消息就不会被发送；只有三者完全匹配，消息才会被发送。</li>\n<li>transfer(可选)：是一串和message 同时传递的 Transferable 对象. 这些对象的所有权将被转移给消息的接收方，而发送一方将不再保有所有权。</li>\n</ul>\n<p>接下来我们看个例子： <a href=\"http://localhost:3000/a.html页面向http://localhost:4000/b.html传递“我爱你”,然后后者传回&quot;我不爱你&quot;。\">http://localhost:3000/a.html页面向http://localhost:4000/b.html传递“我爱你”,然后后者传回&quot;我不爱你&quot;。</a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// a.html</span><br><span class=\"line\">  &lt;iframe src=&quot;http://localhost:4000/b.html&quot; frameborder=&quot;0&quot; id=&quot;frame&quot; onload=&quot;load()&quot;&gt;&lt;/iframe&gt; //等它加载完触发一个事件</span><br><span class=\"line\">  //内嵌在http://localhost:3000/a.html</span><br><span class=\"line\">    &lt;script&gt;</span><br><span class=\"line\">      function load() &#123;</span><br><span class=\"line\">        let frame = document.getElementById(&apos;frame&apos;)</span><br><span class=\"line\">        frame.contentWindow.postMessage(&apos;我爱你&apos;, &apos;http://localhost:4000&apos;) //发送数据</span><br><span class=\"line\">        window.onmessage = function(e) &#123; //接受返回数据</span><br><span class=\"line\">          console.log(e.data) //我不爱你</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// b.html</span><br><span class=\"line\">  window.onmessage = function(e) &#123;</span><br><span class=\"line\">    console.log(e.data) //我爱你</span><br><span class=\"line\">    e.source.postMessage(&apos;我不爱你&apos;, e.origin)</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"四、websocket\"><a href=\"#四、websocket\" class=\"headerlink\" title=\"四、websocket\"></a>四、websocket</h4><p>Websocket是HTML5的一个持久化的协议，它实现了浏览器与服务器的全双工通信，同时也是跨域的一种解决方案。WebSocket和HTTP都是应用层协议，都基于 TCP 协议。但是 WebSocket 是一种双向通信协议，在建立连接之后，WebSocket 的 server 与 client 都能主动向对方发送或接收数据。同时，WebSocket 在建立连接时需要借助 HTTP 协议，连接建立好了之后 client 与 server 之间的双向通信就与 HTTP 无关了。</p>\n<p>原生WebSocket API使用起来不太方便，我们使用Socket.io，它很好地封装了webSocket接口，提供了更简单、灵活的接口，也对不支持webSocket的浏览器提供了向下兼容。</p>\n<p>我们先来看个例子：本地文件socket.html向localhost:3000发生数据和接受数据<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// socket.html</span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">    let socket = new WebSocket(&apos;ws://localhost:3000&apos;);</span><br><span class=\"line\">    socket.onopen = function () &#123;</span><br><span class=\"line\">      socket.send(&apos;我爱你&apos;);//向服务器发送数据</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    socket.onmessage = function (e) &#123;</span><br><span class=\"line\">      console.log(e.data);//接收服务器返回的数据</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// server.js</span><br><span class=\"line\">let express = require(&apos;express&apos;);</span><br><span class=\"line\">let app = express();</span><br><span class=\"line\">let WebSocket = require(&apos;ws&apos;);//记得安装ws</span><br><span class=\"line\">let wss = new WebSocket.Server(&#123;port:3000&#125;);</span><br><span class=\"line\">wss.on(&apos;connection&apos;,function(ws) &#123;</span><br><span class=\"line\">  ws.on(&apos;message&apos;, function (data) &#123;</span><br><span class=\"line\">    console.log(data);</span><br><span class=\"line\">    ws.send(&apos;我不爱你&apos;)</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h4 id=\"五、Node中间件代理-两次跨域\"><a href=\"#五、Node中间件代理-两次跨域\" class=\"headerlink\" title=\"五、Node中间件代理(两次跨域)\"></a>五、Node中间件代理(两次跨域)</h4><p>实现原理：同源策略是浏览器需要遵循的标准，而如果是服务器向服务器请求就无需遵循同源策略。 代理服务器，需要做以下几个步骤：</p>\n<ul>\n<li>接受客户端请求 。</li>\n<li>将请求 转发给服务器。</li>\n<li>拿到服务器 响应 数据。</li>\n<li>将 响应 转发给客户端。</li>\n</ul>\n<p><img src=\"/images/九种跨域方式实现原理/03.png\" alt=\"\"></p>\n<p>我们先来看个例子：本地文件index.html文件，通过代理服务器<a href=\"http://localhost:3000向目标服务器http://localhost:4000请求数据。\">http://localhost:3000向目标服务器http://localhost:4000请求数据。</a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// index.html(http://127.0.0.1:5500)</span><br><span class=\"line\"> &lt;script src=&quot;https://cdn.bootcss.com/jquery/3.3.1/jquery.min.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">    &lt;script&gt;</span><br><span class=\"line\">      $.ajax(&#123;</span><br><span class=\"line\">        url: &apos;http://localhost:3000&apos;,</span><br><span class=\"line\">        type: &apos;post&apos;,</span><br><span class=\"line\">        data: &#123; name: &apos;xiamen&apos;, password: &apos;123456&apos; &#125;,</span><br><span class=\"line\">        contentType: &apos;application/json;charset=utf-8&apos;,</span><br><span class=\"line\">        success: function(result) &#123;</span><br><span class=\"line\">          console.log(result) // &#123;&quot;title&quot;:&quot;fontend&quot;,&quot;password&quot;:&quot;123456&quot;&#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        error: function(msg) &#123;</span><br><span class=\"line\">          console.log(msg)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">     &lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// server1.js 代理服务器(http://localhost:3000)</span><br><span class=\"line\">const http = require(&apos;http&apos;)</span><br><span class=\"line\">// 第一步：接受客户端请求</span><br><span class=\"line\">const server = http.createServer((request, response) =&gt; &#123;</span><br><span class=\"line\">  // 代理服务器，直接和浏览器直接交互，需要设置CORS 的首部字段</span><br><span class=\"line\">  response.writeHead(200, &#123;</span><br><span class=\"line\">    &apos;Access-Control-Allow-Origin&apos;: &apos;*&apos;,</span><br><span class=\"line\">    &apos;Access-Control-Allow-Methods&apos;: &apos;*&apos;,</span><br><span class=\"line\">    &apos;Access-Control-Allow-Headers&apos;: &apos;Content-Type&apos;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  // 第二步：将请求转发给服务器</span><br><span class=\"line\">  const proxyRequest = http</span><br><span class=\"line\">    .request(</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        host: &apos;127.0.0.1&apos;,</span><br><span class=\"line\">        port: 4000,</span><br><span class=\"line\">        url: &apos;/&apos;,</span><br><span class=\"line\">        method: request.method,</span><br><span class=\"line\">        headers: request.headers</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      serverResponse =&gt; &#123;</span><br><span class=\"line\">        // 第三步：收到服务器的响应</span><br><span class=\"line\">        var body = &apos;&apos;</span><br><span class=\"line\">        serverResponse.on(&apos;data&apos;, chunk =&gt; &#123;</span><br><span class=\"line\">          body += chunk</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        serverResponse.on(&apos;end&apos;, () =&gt; &#123;</span><br><span class=\"line\">          console.log(&apos;The data is &apos; + body)</span><br><span class=\"line\">          // 第四步：将响应结果转发给浏览器</span><br><span class=\"line\">          response.end(body)</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    )</span><br><span class=\"line\">    .end()</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">server.listen(3000, () =&gt; &#123;</span><br><span class=\"line\">  console.log(&apos;The proxyServer is running at http://localhost:3000&apos;)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// server2.js(http://localhost:4000)</span><br><span class=\"line\">const http = require(&apos;http&apos;)</span><br><span class=\"line\">const data = &#123; title: &apos;fontend&apos;, password: &apos;123456&apos; &#125;</span><br><span class=\"line\">const server = http.createServer((request, response) =&gt; &#123;</span><br><span class=\"line\">  if (request.url === &apos;/&apos;) &#123;</span><br><span class=\"line\">    response.end(JSON.stringify(data))</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">server.listen(4000, () =&gt; &#123;</span><br><span class=\"line\">  console.log(&apos;The server is running at http://localhost:4000&apos;)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>上述代码经过两次跨域，值得注意的是浏览器向代理服务器发送请求，也遵循同源策略，最后在index.html文件打印出{“title”:”fontend”,”password”:”123456”}</p>\n<h4 id=\"六、nginx反向代理\"><a href=\"#六、nginx反向代理\" class=\"headerlink\" title=\"六、nginx反向代理\"></a>六、nginx反向代理</h4><p>实现原理类似于Node中间件代理，需要你搭建一个中转nginx服务器，用于转发请求。</p>\n<p>使用nginx反向代理实现跨域，是最简单的跨域方式。只需要修改nginx的配置即可解决跨域问题，支持所有浏览器，支持session，不需要修改任何代码，并且不会影响服务器性能。</p>\n<p>实现思路：通过nginx配置一个代理服务器（域名与domain1相同，端口不同）做跳板机，反向代理访问domain2接口，并且可以顺便修改cookie中domain信息，方便当前域cookie写入，实现跨域登录。</p>\n<p>先下载nginx，然后将nginx目录下的nginx.conf修改如下:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// proxy服务器</span><br><span class=\"line\">server &#123;</span><br><span class=\"line\">    listen       81;</span><br><span class=\"line\">    server_name  www.domain1.com;</span><br><span class=\"line\">    location / &#123;</span><br><span class=\"line\">        proxy_pass   http://www.domain2.com:8080;  #反向代理</span><br><span class=\"line\">        proxy_cookie_domain www.domain2.com www.domain1.com; #修改cookie里域名</span><br><span class=\"line\">        index  index.html index.htm;</span><br><span class=\"line\"></span><br><span class=\"line\">        # 当用webpack-dev-server等中间件代理接口访问nignx时，此时无浏览器参与，故没有同源限制，下面的跨域配置可不启用</span><br><span class=\"line\">        add_header Access-Control-Allow-Origin http://www.domain1.com;  #当前端只跨域不带cookie时，可为*</span><br><span class=\"line\">        add_header Access-Control-Allow-Credentials true;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>最后通过命令行nginx -s reload启动nginx<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// index.html</span><br><span class=\"line\">var xhr = new XMLHttpRequest();</span><br><span class=\"line\">// 前端开关：浏览器是否读写cookie</span><br><span class=\"line\">xhr.withCredentials = true;</span><br><span class=\"line\">// 访问nginx中的代理服务器</span><br><span class=\"line\">xhr.open(&apos;get&apos;, &apos;http://www.domain1.com:81/?user=admin&apos;, true);</span><br><span class=\"line\">xhr.send();</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// server.js</span><br><span class=\"line\">var http = require(&apos;http&apos;);</span><br><span class=\"line\">var server = http.createServer();</span><br><span class=\"line\">var qs = require(&apos;querystring&apos;);</span><br><span class=\"line\">server.on(&apos;request&apos;, function(req, res) &#123;</span><br><span class=\"line\">    var params = qs.parse(req.url.substring(2));</span><br><span class=\"line\">    // 向前台写cookie</span><br><span class=\"line\">    res.writeHead(200, &#123;</span><br><span class=\"line\">        &apos;Set-Cookie&apos;: &apos;l=a123456;Path=/;Domain=www.domain2.com;HttpOnly&apos;   // HttpOnly:脚本无法读取</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    res.write(JSON.stringify(params));</span><br><span class=\"line\">    res.end();</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">server.listen(&apos;8080&apos;);</span><br><span class=\"line\">console.log(&apos;Server is running at port 8080...&apos;);</span><br></pre></td></tr></table></figure>\n<h4 id=\"七、window-name-iframe\"><a href=\"#七、window-name-iframe\" class=\"headerlink\" title=\"七、window.name + iframe\"></a>七、window.name + iframe</h4><p>window.name属性的独特之处：name值在不同的页面（甚至不同域名）加载后依旧存在，并且可以支持非常长的 name 值（2MB）。</p>\n<p>其中a.html和b.html是同域的，都是<a href=\"http://localhost:3000;而c.html是http://localhost:4000\">http://localhost:3000;而c.html是http://localhost:4000</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// a.html(http://localhost:3000/b.html)</span><br><span class=\"line\"> &lt;iframe src=&quot;http://localhost:4000/c.html&quot; frameborder=&quot;0&quot; onload=&quot;load()&quot; id=&quot;iframe&quot;&gt;&lt;/iframe&gt;</span><br><span class=\"line\"> &lt;script&gt;</span><br><span class=\"line\">   let first = true</span><br><span class=\"line\">   // onload事件会触发2次，第1次加载跨域页，并留存数据于window.name</span><br><span class=\"line\">   function load() &#123;</span><br><span class=\"line\">     if(first)&#123;</span><br><span class=\"line\">     // 第1次onload(跨域页)成功后，切换到同域代理页面</span><br><span class=\"line\">       let iframe = document.getElementById(&apos;iframe&apos;);</span><br><span class=\"line\">       iframe.src = &apos;http://localhost:3000/b.html&apos;;</span><br><span class=\"line\">       first = false;</span><br><span class=\"line\">     &#125;else&#123;</span><br><span class=\"line\">     // 第2次onload(同域b.html页)成功后，读取同域window.name中数据</span><br><span class=\"line\">       console.log(iframe.contentWindow.name);</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> &lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<p>b.html为中间代理页，与a.html同域，内容为空。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// c.html(http://localhost:4000/c.html)</span><br><span class=\"line\"> &lt;script&gt;</span><br><span class=\"line\">   window.name = &apos;我不爱你&apos;  </span><br><span class=\"line\"> &lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n<p>总结：通过iframe的src属性由外域转向本地域，跨域数据即由iframe的window.name从外域传递到本地域。这个就巧妙地绕过了浏览器的跨域访问限制，但同时它又是安全操作。</p>\n<h4 id=\"八、location-hash-iframe\"><a href=\"#八、location-hash-iframe\" class=\"headerlink\" title=\"八、location.hash + iframe\"></a>八、location.hash + iframe</h4><p>实现原理： a.html欲与c.html跨域相互通信，通过中间页b.html来实现。 三个页面，不同域之间利用iframe的location.hash传值，相同域之间直接js访问来通信。</p>\n<p>具体实现步骤：一开始a.html给c.html传一个hash值，然后c.html收到hash值后，再把hash值传递给b.html，最后b.html将结果放到a.html的hash值中。<br>同样的，a.html和b.html是同域的，都是<a href=\"http://localhost:3000;而c.html是http://localhost:4000\">http://localhost:3000;而c.html是http://localhost:4000</a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// a.html</span><br><span class=\"line\"> &lt;iframe src=&quot;http://localhost:4000/c.html#iloveyou&quot;&gt;&lt;/iframe&gt;</span><br><span class=\"line\"> &lt;script&gt;</span><br><span class=\"line\">   window.onhashchange = function () &#123; //检测hash的变化</span><br><span class=\"line\">     console.log(location.hash);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> &lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// b.html</span><br><span class=\"line\"> &lt;script&gt;</span><br><span class=\"line\">   window.parent.parent.location.hash = location.hash </span><br><span class=\"line\">   //b.html将结果放到a.html的hash值中，b.html可通过parent.parent访问a.html页面</span><br><span class=\"line\"> &lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// c.html</span><br><span class=\"line\">console.log(location.hash);</span><br><span class=\"line\"> let iframe = document.createElement(&apos;iframe&apos;);</span><br><span class=\"line\"> iframe.src = &apos;http://localhost:3000/b.html#idontloveyou&apos;;</span><br><span class=\"line\"> document.body.appendChild(iframe);</span><br></pre></td></tr></table></figure>\n<h4 id=\"九、document-domain-iframe\"><a href=\"#九、document-domain-iframe\" class=\"headerlink\" title=\"九、document.domain + iframe\"></a>九、document.domain + iframe</h4><p>该方式只能用于二级域名相同的情况下，比如 a.test.com 和 b.test.com 适用于该方式。 只需要给页面添加 document.domain =’test.com’ 表示二级域名都相同就可以实现跨域。</p>\n<p>实现原理：两个页面都通过js强制设置document.domain为基础主域，就实现了同域。</p>\n<p>我们看个例子：页面a.zf1.cn:3000/a.html获取页面b.zf1.cn:3000/b.html中a的值</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// a.html</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\"> helloa</span><br><span class=\"line\">  &lt;iframe src=&quot;http://b.zf1.cn:3000/b.html&quot; frameborder=&quot;0&quot; onload=&quot;load()&quot; id=&quot;frame&quot;&gt;&lt;/iframe&gt;</span><br><span class=\"line\">  &lt;script&gt;</span><br><span class=\"line\">    document.domain = &apos;zf1.cn&apos;</span><br><span class=\"line\">    function load() &#123;</span><br><span class=\"line\">      console.log(frame.contentWindow.a);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &lt;/script&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// b.html</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">   hellob</span><br><span class=\"line\">   &lt;script&gt;</span><br><span class=\"line\">     document.domain = &apos;zf1.cn&apos;</span><br><span class=\"line\">     var a = 100;</span><br><span class=\"line\">   &lt;/script&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h4><ul>\n<li>CORS支持所有类型的HTTP请求，是跨域HTTP请求的根本解决方案</li>\n<li>JSONP只支持GET请求，JSONP的优势在于支持老式浏览器，以及可以向不支持CORS的网站请求数据。</li>\n<li>不管是Node中间件代理还是nginx反向代理，主要是通过同源策略对服务器不加限制。</li>\n<li>日常工作中，用得比较多的跨域方案是cors和nginx反向代理</li>\n</ul>\n</script></p>","categories":[],"tags":["前端"]},{"title":"LVS","url":"http://tanlent.coding.me/LVS/","content":"<h4 id=\"LVS相关术语\"><a href=\"#LVS相关术语\" class=\"headerlink\" title=\"LVS相关术语\"></a>LVS相关术语</h4><ul>\n<li>DS：Director Server。指的是前端负载均衡器节点。</li>\n<li>RS：Real Server。后端真实的工作服务器。</li>\n<li>VIP：向外部直接面向用户请求，作为用户请求的目标的IP地址。</li>\n<li>DIP：Director Server IP，主要用于和内部主机通讯的IP地址。</li>\n<li>RIP：Real Server IP，后端服务器的IP地址。</li>\n<li>CIP：Client IP，访问客户端的IP地址。<h4 id=\"LVS-NAT原理和特点\"><a href=\"#LVS-NAT原理和特点\" class=\"headerlink\" title=\"LVS/NAT原理和特点\"></a>LVS/NAT原理和特点</h4><blockquote>\n<p>LVS-NAT模型的实现原理</p>\n</blockquote>\n</li>\n</ul>\n<ol>\n<li>当用户请求到达Director Server，此时请求的数据报文会先到内核空间的PREROUTING链。 此时报文的源IP为CIP，目标IP为VIP</li>\n<li>PREROUTING检查发现数据包的目标IP是本机，将数据包送至INPUT链</li>\n<li>PVS比对数据包请求的服务是否为集群服务，若是，修改数据包的目标IP地址为后端服务器IP，然后将数据包发至POSTROUTING链。 此时报文的源IP为CIP，目标IP为RIP</li>\n<li>POSTROUTING链通过选路，将数据包发送给Real Server</li>\n<li>Real Server比对发现目标为自己的IP，开始构建响应报文发回给Director Server。 此时报文的源IP为RIP，目标IP为CIP</li>\n<li>Director Server在响应客户端前，此时会将源IP地址修改为自己的VIP地址，然后响应给客户端。 此时报文的源IP为VIP，目标IP为CIP<blockquote>\n<p>LVS-NAT模型的特性</p>\n</blockquote>\n</li>\n</ol>\n<ul>\n<li>RS应该使用私有地址，RS的网关必须指向DIP</li>\n<li>DIP和RIP必须在同一个网段内</li>\n<li>请求和响应报文都需要经过Director Server，高负载场景中，Director Server易成为性能瓶颈</li>\n<li>支持端口映射</li>\n<li>RS可以使用任意操作系统</li>\n<li>缺陷：对Director Server压力会比较大，请求和响应都需经过director server<h4 id=\"LVS-DR原理和特点\"><a href=\"#LVS-DR原理和特点\" class=\"headerlink\" title=\"LVS/DR原理和特点\"></a>LVS/DR原理和特点</h4><blockquote>\n<p>LVS/DR模型的原理</p>\n</blockquote>\n</li>\n</ul>\n<ol>\n<li>当用户请求到达Director Server，此时请求的数据报文会先到内核空间的PREROUTING链。 此时报文的源IP为CIP，目标IP为VIP</li>\n<li>PREROUTING检查发现数据包的目标IP是本机，将数据包送至INPUT链</li>\n<li>IPVS比对数据包请求的服务是否为集群服务，若是，将请求报文中的源MAC地址修改为DIP的MAC地址，将目标MAC地址修改RIP的MAC地址，然后将数据包发至POSTROUTING链。 此时的源IP和目的IP均未修改，仅修改了源MAC地址为DIP的MAC地址，目标MAC地址为RIP的MAC地址</li>\n<li>由于DS和RS在同一个网络中，所以是通过二层来传输。POSTROUTING链检查目标MAC地址为RIP的MAC地址，那么此时数据包将会发至Real Server。</li>\n<li>RS发现请求报文的MAC地址是自己的MAC地址，就接收此报文。处理完成之后，将响应报文通过lo接口传送给eth0网卡然后向外发出。 此时的源IP地址为VIP，目标IP为CIP</li>\n<li>响应报文最终送达至客户端<blockquote>\n<p>LVS/DR模型的特点</p>\n</blockquote>\n</li>\n</ol>\n<ul>\n<li>特点1：保证前端路由将目标地址为VIP报文统统发给Director Server，而不是RS</li>\n<li>RS可以使用私有地址；也可以是公网地址，如果使用公网地址，此时可以通过互联网对RIP进行直接访问</li>\n<li>RS跟Director Server必须在同一个物理网络中</li>\n<li>所有的请求报文经由Director Server，但响应报文必须不能进过Director Server</li>\n<li>不支持地址转换，也不支持端口映射</li>\n<li>RS可以是大多数常见的操作系统</li>\n<li>RS的网关绝不允许指向DIP(因为我们不允许他经过director)</li>\n<li>RS上的lo接口配置VIP的IP地址</li>\n<li>缺陷：RS和DS必须在同一机房中<blockquote>\n<p>特点1的解决方案：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- 在前端路由器做静态地址路由绑定，将对于VIP的地址仅路由到Director Server</span><br><span class=\"line\">- 存在问题：用户未必有路由操作权限，因为有可能是运营商提供的，所以这个方法未必实用</span><br><span class=\"line\">- arptables：在arp的层次上实现在ARP解析时做防火墙规则，过滤RS响应ARP请求。这是由iptables提供的</span><br><span class=\"line\">- 修改RS上内核参数（arp_ignore和arp_announce）将RS上的VIP配置在lo接口的别名上，并限制其不能响应对VIP地址解析请求</span><br></pre></td></tr></table></figure>\n</blockquote>\n</li>\n</ul>\n<h4 id=\"LVS-Tun原理和特点\"><a href=\"#LVS-Tun原理和特点\" class=\"headerlink\" title=\"LVS/Tun原理和特点\"></a>LVS/Tun原理和特点</h4><blockquote>\n<p>LVS/Tun模型的实现原理</p>\n<ol>\n<li>当用户请求到达Director Server，此时请求的数据报文会先到内核空间的PREROUTING链。 此时报文的源IP为CIP，目标IP为VIP</li>\n<li>PREROUTING检查发现数据包的目标IP是本机，将数据包送至INPUT链</li>\n<li>IPVS比对数据包请求的服务是否为集群服务，若是，在请求报文的首部再次封装一层IP报文，封装源IP为为DIP，目标IP为RIP。然后发至POSTROUTING链。 此时源IP为DIP，目标IP为RIP</li>\n<li>POSTROUTING链根据最新封装的IP报文，将数据包发至RS（因为在外层封装多了一层IP首部，所以可以理解为此时通过隧道传输）。 此时源IP为DIP，目标IP为RIP</li>\n<li>RS接收到报文后发现是自己的IP地址，就将报文接收下来，拆除掉最外层的IP后，会发现里面还有一层IP首部，而且目标是自己的lo接口VIP，那么此时RS开始处理此请求，处理完成之后，通过lo接口送给eth0网卡，然后向外传递。 此时的源IP地址为VIP，目标IP为CIP</li>\n<li>响应报文最终送达至客户端<br>LVS/Tun模型的特点</li>\n</ol>\n<ul>\n<li>RIP、VIP、DIP全是公网地址</li>\n<li>RS的网关不会也不可能指向DIP</li>\n<li>所有的请求报文经由Director Server，但响应报文必须不能进过Director Server</li>\n<li>不支持端口映射</li>\n<li>RS的系统必须支持隧道</li>\n</ul>\n</blockquote>\n<h4 id=\"LVS的八种调度算法\"><a href=\"#LVS的八种调度算法\" class=\"headerlink\" title=\"LVS的八种调度算法\"></a>LVS的八种调度算法</h4><ul>\n<li>轮叫调度 rr<blockquote>\n<p>这种算法是最简单的，就是按依次循环的方式将请求调度到不同的服务器上，该算法最大的特点就是简单。轮询算法假设所有的服务器处理请求的能力都是一样的，调度器会将所有的请求平均分配给每个真实服务器，不管后端 RS 配置和处理能力，非常均衡地分发下去。</p>\n</blockquote>\n</li>\n<li>加权轮叫 wrr<blockquote>\n<p>这种算法比 rr 的算法多了一个权重的概念，可以给 RS 设置权重，权重越高，那么分发的请求数越多，权重的取值范围 0 – 100。主要是对rr算法的一种优化和补充， LVS 会考虑每台服务器的性能，并给每台服务器添加要给权值，如果服务器A的权值为1，服务器B的权值为2，则调度到服务器B的请求会是服务器A的2倍。权值越高的服务器，处理的请求越多。</p>\n</blockquote>\n</li>\n<li>最少链接 lc<blockquote>\n<p>这个算法会根据后端 RS 的连接数来决定把请求分发给谁，比如 RS1 连接数比 RS2 连接数少，那么请求就优先发给 RS1</p>\n</blockquote>\n</li>\n<li>加权最少链接 wlc<blockquote>\n<p>这个算法比 lc 多了一个权重的概念</p>\n</blockquote>\n</li>\n<li>基于局部性的最少连接调度算法 lblc<blockquote>\n<p>这个算法是请求数据包的目标 IP 地址的一种调度算法，该算法先根据请求的目标 IP 地址寻找最近的该目标 IP 地址所有使用的服务器，如果这台服务器依然可用，并且有能力处理该请求，调度器会尽量选择相同的服务器，否则会继续选择其它可行的服务器</p>\n</blockquote>\n</li>\n<li>复杂的基于局部性最少的连接算法 lblcr<blockquote>\n<p>记录的不是要给目标 IP 与一台服务器之间的连接记录，它会维护一个目标 IP 到一组服务器之间的映射关系，防止单点服务器负载过高。</p>\n</blockquote>\n</li>\n<li>目标地址散列调度算法 dh<blockquote>\n<p>该算法是根据目标 IP 地址通过散列函数将目标 IP 与服务器建立映射关系，出现服务器不可用或负载过高的情况下，发往该目标 IP 的请求会固定发给该服务器。</p>\n</blockquote>\n</li>\n<li>源地址散列调度算法 sh<blockquote>\n<p>与目标地址散列调度算法类似，但它是根据源地址散列算法进行静态分配固定的服务器资源。</p>\n</blockquote>\n<h4 id=\"实践LVS的NAT模式\"><a href=\"#实践LVS的NAT模式\" class=\"headerlink\" title=\"实践LVS的NAT模式\"></a>实践LVS的NAT模式</h4><h5 id=\"实验环境\"><a href=\"#实验环境\" class=\"headerlink\" title=\"实验环境\"></a>实验环境</h5><blockquote>\n<p>三台服务器，一台作为 director，两台作为 real server，director 有一个外网网卡(172.16.254.200) 和一个内网ip(192.168.0.8)，两个 real server 上只有内网 ip (192.168.0.18) 和 (192.168.0.28)，并且需要把两个 real server 的内网网关设置为 director 的内网 ip(192.168.0.8)</p>\n</blockquote>\n<h5 id=\"安装和配置\"><a href=\"#安装和配置\" class=\"headerlink\" title=\"安装和配置\"></a>安装和配置</h5><blockquote>\n<p>两个 real server 上都安装 nginx 服务</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ yum install -y nginx</span><br></pre></td></tr></table></figure>\n</blockquote>\n</li>\n</ul>\n<blockquote>\n<p>Director 上安装 ipvsadm<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ yum install -y ipvsadm</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<blockquote>\n<p>Director 上编辑 nat 实现脚本<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ vim /usr/local/sbin/lvs_nat.sh</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<blockquote>\n<p>编辑写入如下内容：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#! /bin/bash</span><br><span class=\"line\"># director服务器上开启路由转发功能:</span><br><span class=\"line\">echo 1 &gt; /proc/sys/net/ipv4/ip_forward</span><br><span class=\"line\"># 关闭 icmp 的重定向</span><br><span class=\"line\">echo 0 &gt; /proc/sys/net/ipv4/conf/all/send_redirects</span><br><span class=\"line\">echo 0 &gt; /proc/sys/net/ipv4/conf/default/send_redirects</span><br><span class=\"line\">echo 0 &gt; /proc/sys/net/ipv4/conf/eth0/send_redirects</span><br><span class=\"line\">echo 0 &gt; /proc/sys/net/ipv4/conf/eth1/send_redirects</span><br><span class=\"line\"># director设置 nat 防火墙</span><br><span class=\"line\">iptables -t nat -F</span><br><span class=\"line\">iptables -t nat -X</span><br><span class=\"line\">iptables -t nat -A POSTROUTING -s 192.168.0.0/24 -j MASQUERADE</span><br><span class=\"line\"># director设置 ipvsadm</span><br><span class=\"line\">IPVSADM=&apos;/sbin/ipvsadm&apos;</span><br><span class=\"line\">$IPVSADM -C</span><br><span class=\"line\">$IPVSADM -A -t 172.16.254.200:80 -s wrr</span><br><span class=\"line\">$IPVSADM -a -t 172.16.254.200:80 -r 192.168.0.18:80 -m -w 1</span><br><span class=\"line\">$IPVSADM -a -t 172.16.254.200:80 -r 192.168.0.28:80 -m -w 1</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<blockquote>\n<p>保存后，在 Director 上直接运行这个脚本就可以完成 lvs/nat 的配置<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ /bin/bash /usr/local/sbin/lvs_nat.sh</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<blockquote>\n<p>查看ipvsadm设置的规则<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ipvsadm -ln</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<h5 id=\"测试LVS的效果\"><a href=\"#测试LVS的效果\" class=\"headerlink\" title=\"测试LVS的效果\"></a>测试LVS的效果</h5><blockquote>\n<p>通过浏览器测试2台机器上的web内容 <a href=\"http://172.16.254.200\" target=\"_blank\" rel=\"noopener\">http://172.16.254.200</a> 。为了区分开，我们可以把 nginx 的默认页修改一下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ echo &quot;rs1rs1&quot; &gt;/usr/share/nginx/html/index.html</span><br><span class=\"line\">$ echo &quot;rs2rs2&quot; &gt;/usr/share/nginx/html/index.html</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<h4 id=\"实践LVS的DR模式\"><a href=\"#实践LVS的DR模式\" class=\"headerlink\" title=\"实践LVS的DR模式\"></a>实践LVS的DR模式</h4><h5 id=\"实验环境-1\"><a href=\"#实验环境-1\" class=\"headerlink\" title=\"实验环境\"></a>实验环境</h5><blockquote>\n<p>三台机器：</p>\n<ul>\n<li>Director节点：  (eth0 192.168.0.8  vip eth0:0 192.168.0.38)</li>\n<li>Real server1： (eth0 192.168.0.18 vip lo:0 192.168.0.38)</li>\n<li>Real server2： (eth0 192.168.0.28 vip lo:0 192.168.0.38)</li>\n</ul>\n</blockquote>\n<h5 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h5><blockquote>\n<p>两个 real server 上都安装 nginx 服务<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ yum install -y nginx</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<blockquote>\n<p>Director 上安装 ipvsadm<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ yum install -y ipvsadm</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<h5 id=\"Director-上配置脚本\"><a href=\"#Director-上配置脚本\" class=\"headerlink\" title=\"Director 上配置脚本\"></a>Director 上配置脚本</h5><blockquote>\n<p>修改配置文件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ vim /usr/local/sbin/lvs_dr.sh</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<blockquote>\n<p>内容如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#! /bin/bash</span><br><span class=\"line\">echo 1 &gt; /proc/sys/net/ipv4/ip_forward</span><br><span class=\"line\">ipv=/sbin/ipvsadm</span><br><span class=\"line\">vip=192.168.0.38</span><br><span class=\"line\">rs1=192.168.0.18</span><br><span class=\"line\">rs2=192.168.0.28</span><br><span class=\"line\">ifconfig eth0:0 down</span><br><span class=\"line\">ifconfig eth0:0 $vip broadcast $vip netmask 255.255.255.255 up</span><br><span class=\"line\">route add -host $vip dev eth0:0</span><br><span class=\"line\">$ipv -C</span><br><span class=\"line\">$ipv -A -t $vip:80 -s wrr </span><br><span class=\"line\">$ipv -a -t $vip:80 -r $rs1:80 -g -w 3</span><br><span class=\"line\">$ipv -a -t $vip:80 -r $rs2:80 -g -w 1</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<blockquote>\n<p>执行脚本<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ bash /usr/local/sbin/lvs_dr.sh</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<h5 id=\"在2台-rs-上配置脚本\"><a href=\"#在2台-rs-上配置脚本\" class=\"headerlink\" title=\"在2台 rs 上配置脚本\"></a>在2台 rs 上配置脚本</h5><blockquote>\n<p>修改配置文件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ vim /usr/local/sbin/lvs_dr_rs.sh</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<blockquote>\n<p>内容如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#! /bin/bash</span><br><span class=\"line\">vip=192.168.0.38</span><br><span class=\"line\">ifconfig lo:0 $vip broadcast $vip netmask 255.255.255.255 up</span><br><span class=\"line\">route add -host $vip lo:0</span><br><span class=\"line\">echo &quot;1&quot; &gt;/proc/sys/net/ipv4/conf/lo/arp_ignore</span><br><span class=\"line\">echo &quot;2&quot; &gt;/proc/sys/net/ipv4/conf/lo/arp_announce</span><br><span class=\"line\">echo &quot;1&quot; &gt;/proc/sys/net/ipv4/conf/all/arp_ignore</span><br><span class=\"line\">echo &quot;2&quot; &gt;/proc/sys/net/ipv4/conf/all/arp_announce</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<blockquote>\n<p>rs 上分别执行脚本<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ bash /usr/local/sbin/lvs_dr_rs.sh</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<h5 id=\"实验测试\"><a href=\"#实验测试\" class=\"headerlink\" title=\"实验测试\"></a>实验测试</h5><blockquote>\n<p>测试方式同上，浏览器访问 <a href=\"http://192.168.0.38\" target=\"_blank\" rel=\"noopener\">http://192.168.0.38</a></p>\n</blockquote>\n<h4 id=\"LVS结合keepalive\"><a href=\"#LVS结合keepalive\" class=\"headerlink\" title=\"LVS结合keepalive\"></a>LVS结合keepalive</h4><blockquote>\n<p>LVS可以实现负载均衡，但是不能够进行健康检查，比如一个rs出现故障，LVS 仍然会把请求转发给故障的rs服务器，这样就会导致请求的无效性。keepalive 软件可以进行健康检查，而且能同时实现 LVS 的高可用性，解决 LVS 单点故障的问题，其实 keepalive 就是为 LVS 而生的。</p>\n</blockquote>\n<h5 id=\"实验环境-2\"><a href=\"#实验环境-2\" class=\"headerlink\" title=\"实验环境\"></a>实验环境</h5><blockquote>\n<p>4台节点</p>\n<ul>\n<li>Keepalived1 + lvs1(Director1)：192.168.0.48</li>\n<li>Keepalived2 + lvs2(Director2)：192.168.0.58</li>\n<li>Real server1：192.168.0.18</li>\n<li>Real server2：192.168.0.28</li>\n<li>IP: 192.168.0.38</li>\n</ul>\n</blockquote>\n<h5 id=\"安装系统软件\"><a href=\"#安装系统软件\" class=\"headerlink\" title=\"安装系统软件\"></a>安装系统软件</h5><blockquote>\n<p>Lvs + keepalived的2个节点安装<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ yum install ipvsadm keepalived -y</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<h5 id=\"Real-server-nginx服务的2个节点安装\"><a href=\"#Real-server-nginx服务的2个节点安装\" class=\"headerlink\" title=\"Real server + nginx服务的2个节点安装\"></a>Real server + nginx服务的2个节点安装</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ yum install epel-release -y</span><br><span class=\"line\">$ yum install nginx -y</span><br></pre></td></tr></table></figure>\n<h5 id=\"设置配置脚本\"><a href=\"#设置配置脚本\" class=\"headerlink\" title=\"设置配置脚本\"></a>设置配置脚本</h5><blockquote>\n<p>Real server节点2台配置脚本<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ vim /usr/local/sbin/lvs_dr_rs.sh</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<blockquote>\n<p>内容如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#! /bin/bash</span><br><span class=\"line\">vip=192.168.0.38</span><br><span class=\"line\">ifconfig lo:0 $vip broadcast $vip netmask 255.255.255.255 up</span><br><span class=\"line\">route add -host $vip lo:0</span><br><span class=\"line\">echo &quot;1&quot; &gt;/proc/sys/net/ipv4/conf/lo/arp_ignore</span><br><span class=\"line\">echo &quot;2&quot; &gt;/proc/sys/net/ipv4/conf/lo/arp_announce</span><br><span class=\"line\">echo &quot;1&quot; &gt;/proc/sys/net/ipv4/conf/all/arp_ignore</span><br><span class=\"line\">echo &quot;2&quot; &gt;/proc/sys/net/ipv4/conf/all/arp_announce</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<blockquote>\n<p>2节点rs 上分别执行脚本：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ bash /usr/local/sbin/lvs_dr_rs.sh</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<blockquote>\n<p>keepalived节点配置(2节点)：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ vim /etc/keepalived/keepalived.conf</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<blockquote>\n<p>内容如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vrrp_instance VI_1 &#123;</span><br><span class=\"line\">    state MASTER</span><br><span class=\"line\">    interface eth0</span><br><span class=\"line\">    virtual_router_id 51</span><br><span class=\"line\">    priority 100</span><br><span class=\"line\">    advert_int 1</span><br><span class=\"line\">    authentication &#123;</span><br><span class=\"line\">        auth_type PASS</span><br><span class=\"line\">        auth_pass 1111</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    virtual_ipaddress &#123;</span><br><span class=\"line\">        192.168.0.38</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">virtual_server 192.168.0.38 80 &#123;</span><br><span class=\"line\">    delay_loop 6</span><br><span class=\"line\">    lb_algo rr</span><br><span class=\"line\">    lb_kind DR</span><br><span class=\"line\">    persistence_timeout 0</span><br><span class=\"line\">    protocol TCP</span><br><span class=\"line\"></span><br><span class=\"line\">    real_server 192.168.0.18 80 &#123;</span><br><span class=\"line\">        weight 1</span><br><span class=\"line\">        TCP_CHECK &#123;</span><br><span class=\"line\">            connect_timeout 10</span><br><span class=\"line\">            nb_get_retry 3</span><br><span class=\"line\">            delay_before_retry 3</span><br><span class=\"line\">            connect_port 80</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    real_server 192.168.0.28 80 &#123;</span><br><span class=\"line\">        weight 1</span><br><span class=\"line\">        TCP_CHECK &#123;</span><br><span class=\"line\">            connect_timeout 10</span><br><span class=\"line\">            nb_get_retry 3</span><br><span class=\"line\">            delay_before_retry 3</span><br><span class=\"line\">            connect_port 80</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<blockquote>\n<p>从节点( BACKUP )配置文件</p>\n</blockquote>\n<p>拷贝主节点的配置文件keepalived.conf，然后修改如下内容：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">state MASTER -&gt; state BACKUP</span><br><span class=\"line\">priority 100 -&gt; priority 90</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>keepalived的2个节点执行如下命令，开启转发功能：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ echo 1 &gt; /proc/sys/net/ipv4/ip_forward</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<h5 id=\"启动keepalive\"><a href=\"#启动keepalive\" class=\"headerlink\" title=\"启动keepalive\"></a>启动keepalive</h5><blockquote>\n<p>先主后从分别启动keepalive<br>service keepalived start</p>\n</blockquote>\n","categories":[],"tags":["linux"]},{"title":"OAuth 2.0","url":"http://tanlent.coding.me/OAuth-2-0/","content":"<h4 id=\"优势\"><a href=\"#优势\" class=\"headerlink\" title=\"优势\"></a>优势</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. OAuth 2.0比OAuth 1.0易于实现</span><br><span class=\"line\">2. 更安全，客户端不接触用户密码，服务器端更易集中保护</span><br><span class=\"line\">3. 广泛传播并被持续采用</span><br><span class=\"line\">4. 短寿命和封装的token</span><br><span class=\"line\">5. 资源服务器和授权服务器解耦</span><br><span class=\"line\">6. 集中式授权，简化客户端</span><br><span class=\"line\">7. HTTP/JSON友好，易于请求和传递token</span><br><span class=\"line\">8. 考虑多种客户端架构场景</span><br><span class=\"line\">9. 客户可以具有不同的信任级别</span><br></pre></td></tr></table></figure>\n<h4 id=\"不足\"><a href=\"#不足\" class=\"headerlink\" title=\"不足\"></a>不足</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. 协议框架太宽泛，造成各种实现的兼容性和互操作性差</span><br><span class=\"line\">2. 和OAuth 1.0不兼容</span><br><span class=\"line\">3. OAuth 2.0不是一个认证协议，是一个授权框架，OAuth 2.0本身并不能告诉你任何用户信息</span><br></pre></td></tr></table></figure>\n<h4 id=\"OAuth-2-0主要角色\"><a href=\"#OAuth-2-0主要角色\" class=\"headerlink\" title=\"OAuth 2.0主要角色\"></a>OAuth 2.0主要角色</h4><p><img src=\"/images/OAuth-2-0/p1.png\" alt=\"\"></p>\n<h4 id=\"OAuth-令牌类型\"><a href=\"#OAuth-令牌类型\" class=\"headerlink\" title=\"OAuth 令牌类型\"></a>OAuth 令牌类型</h4><ul>\n<li>访问令牌(Access Token)</li>\n</ul>\n<blockquote>\n<p>用于代表一个用户或服务直接去访问受保护的资源</p>\n</blockquote>\n<ul>\n<li>刷新令牌(Refresh Token)</li>\n</ul>\n<blockquote>\n<p>用于去授权服务器获取一个新的访问令牌</p>\n</blockquote>\n<ul>\n<li>授权码(Authorization Code Token)</li>\n</ul>\n<blockquote>\n<p>仅用于授权码授权类型，用于交换获取访问令牌和刷新令牌</p>\n</blockquote>\n<ul>\n<li>Bearer Token</li>\n</ul>\n<blockquote>\n<p>不管谁拿到Token都可以访问资源，像现钞</p>\n</blockquote>\n<ul>\n<li>Proof of Possession(PoP) Token</li>\n</ul>\n<blockquote>\n<p>可以校验client是否对Token有明确的拥有权</p>\n</blockquote>\n<h4 id=\"典型OAuth-Flow\"><a href=\"#典型OAuth-Flow\" class=\"headerlink\" title=\"典型OAuth Flow\"></a>典型OAuth Flow</h4><h5 id=\"授权码模式\"><a href=\"#授权码模式\" class=\"headerlink\" title=\"授权码模式\"></a>授权码模式</h5><p><img src=\"/images/OAuth-2-0/p24.png\" alt=\"\"></p>\n<h5 id=\"简化模式\"><a href=\"#简化模式\" class=\"headerlink\" title=\"简化模式\"></a>简化模式</h5><p><img src=\"/images/OAuth-2-0/p25.png\" alt=\"\"></p>\n<h5 id=\"密码模式\"><a href=\"#密码模式\" class=\"headerlink\" title=\"密码模式\"></a>密码模式</h5><p><img src=\"/images/OAuth-2-0/p26.png\" alt=\"\"></p>\n<h5 id=\"客户端模式\"><a href=\"#客户端模式\" class=\"headerlink\" title=\"客户端模式\"></a>客户端模式</h5><p><img src=\"/images/OAuth-2-0/p27.png\" alt=\"\"></p>\n<h5 id=\"刷新令牌\"><a href=\"#刷新令牌\" class=\"headerlink\" title=\"刷新令牌\"></a>刷新令牌</h5><p><img src=\"/images/OAuth-2-0/p28.png\" alt=\"\"></p>\n<h4 id=\"四种OAuth-2-0授权类型-Flows\"><a href=\"#四种OAuth-2-0授权类型-Flows\" class=\"headerlink\" title=\"四种OAuth 2.0授权类型(Flows)\"></a>四种OAuth 2.0授权类型(Flows)</h4><p><img src=\"/images/OAuth-2-0/p2.png\" alt=\"\"></p>\n<h4 id=\"授权类型选择-流程\"><a href=\"#授权类型选择-流程\" class=\"headerlink\" title=\"授权类型选择~流程\"></a>授权类型选择~流程</h4><p><img src=\"/images/OAuth-2-0/p3.png\" alt=\"\"></p>\n<h4 id=\"授权服务器\"><a href=\"#授权服务器\" class=\"headerlink\" title=\"授权服务器\"></a>授权服务器</h4><p><img src=\"/images/OAuth-2-0/p4.png\" alt=\"\"></p>\n<h4 id=\"Spring-Security-OAuth2-架构\"><a href=\"#Spring-Security-OAuth2-架构\" class=\"headerlink\" title=\"Spring Security OAuth2 架构\"></a>Spring Security OAuth2 架构</h4><p><img src=\"/images/OAuth-2-0/p5.png\" alt=\"\"></p>\n<h4 id=\"访问令牌的类型\"><a href=\"#访问令牌的类型\" class=\"headerlink\" title=\"访问令牌的类型\"></a>访问令牌的类型</h4><p><img src=\"/images/OAuth-2-0/p6.png\" alt=\"\"></p>\n<p><img src=\"/images/OAuth-2-0/p7.png\" alt=\"\"></p>\n<p><img src=\"/images/OAuth-2-0/p8.png\" alt=\"\"></p>\n<h4 id=\"常见OAuth-2-0安全问题\"><a href=\"#常见OAuth-2-0安全问题\" class=\"headerlink\" title=\"常见OAuth 2.0安全问题\"></a>常见OAuth 2.0安全问题</h4><p><img src=\"/images/OAuth-2-0/p9.png\" alt=\"\"></p>\n<ul>\n<li>CSRF</li>\n</ul>\n<p><img src=\"/images/OAuth-2-0/p10.png\" alt=\"\"></p>\n<h4 id=\"OpenId-Connect\"><a href=\"#OpenId-Connect\" class=\"headerlink\" title=\"OpenId Connect\"></a>OpenId Connect</h4><p><img src=\"/images/OAuth-2-0/p11.png\" alt=\"\"></p>\n<h4 id=\"下一代微服务安全架构\"><a href=\"#下一代微服务安全架构\" class=\"headerlink\" title=\"下一代微服务安全架构\"></a>下一代微服务安全架构</h4><ul>\n<li>方案一</li>\n</ul>\n<p><img src=\"/images/OAuth-2-0/p12.png\" alt=\"\"></p>\n<ul>\n<li>方案二</li>\n</ul>\n<p><img src=\"/images/OAuth-2-0/p13.png\" alt=\"\"></p>\n<ul>\n<li>方案三</li>\n</ul>\n<p><img src=\"/images/OAuth-2-0/p14.png\" alt=\"\"></p>\n<h4 id=\"生产级部署实践\"><a href=\"#生产级部署实践\" class=\"headerlink\" title=\"生产级部署实践\"></a>生产级部署实践</h4><p><img src=\"/images/OAuth-2-0/p15.png\" alt=\"\"></p>\n<h4 id=\"相关资料\"><a href=\"#相关资料\" class=\"headerlink\" title=\"相关资料\"></a>相关资料</h4><ul>\n<li>OAuth2/OIDC开源产品</li>\n</ul>\n<p><img src=\"/images/OAuth-2-0/p16.png\" alt=\"\"></p>\n<ul>\n<li>Spring Security OAuth2</li>\n</ul>\n<p><img src=\"/images/OAuth-2-0/p17.png\" alt=\"\"></p>\n<ul>\n<li>OAuth和OIDC库</li>\n</ul>\n<p><img src=\"/images/OAuth-2-0/p18.png\" alt=\"\"></p>\n<ul>\n<li>OAuth2/OIDC SaaS服务</li>\n</ul>\n<p><img src=\"/images/OAuth-2-0/p19.png\" alt=\"\"></p>\n<ul>\n<li>规范参考</li>\n</ul>\n<p><img src=\"/images/OAuth-2-0/p20.png\" alt=\"\"></p>\n<ul>\n<li>参考文章<ul>\n<li>阮一峰~理解OAuth2<br><a href=\"http://www.ruanyifeng.com/2014/05/oauth_2_0.html\" target=\"_blank\" rel=\"noopener\">http://www.ruanyifeng.com/2014/05/oauth_2_0.html</a></li>\n<li>OAuth 2.0最简向导<br><a href=\"https://medium.com/@darutk/the-simplest-guide-to-oauth-2-0-8c71bd9a15bb\" target=\"_blank\" rel=\"noopener\">https://medium.com/@darutk/the-simplest-guide-to-oauth-2-0-8c71bd9a15bb</a></li>\n</ul>\n</li>\n<li>参考开源代码<ul>\n<li>OAuth2 全家桶项目<br><a href=\"https://github.com/newnil/oauth2-family-barrel\" target=\"_blank\" rel=\"noopener\">https://github.com/newnil/oauth2-family-barrel</a></li>\n<li>Apache Oltu+Shiro实现OAuth2服务器(李胜钊)<br><a href=\"https://github.com/monkeyk/oauth2-shiro\" target=\"_blank\" rel=\"noopener\">https://github.com/monkeyk/oauth2-shiro</a></li>\n<li>Using JWT with Spring Security OAuth<br><a href=\"http://www.baeldung.com/spring-security-oauth-jwt\" target=\"_blank\" rel=\"noopener\">http://www.baeldung.com/spring-security-oauth-jwt</a><br><a href=\"https://github.com/Baeldung/spring-security-oauth\" target=\"_blank\" rel=\"noopener\">https://github.com/Baeldung/spring-security-oauth</a></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"微服务基础架构内容\"><a href=\"#微服务基础架构内容\" class=\"headerlink\" title=\"微服务基础架构内容\"></a>微服务基础架构内容</h4><p><img src=\"/images/OAuth-2-0/p21.png\" alt=\"\"></p>\n<h4 id=\"技术体系\"><a href=\"#技术体系\" class=\"headerlink\" title=\"技术体系\"></a>技术体系</h4><p><img src=\"/images/OAuth-2-0/p22.png\" alt=\"\"></p>\n<h4 id=\"架构和技术栈预览\"><a href=\"#架构和技术栈预览\" class=\"headerlink\" title=\"架构和技术栈预览\"></a>架构和技术栈预览</h4><p><img src=\"/images/OAuth-2-0/p23.png\" alt=\"\"></p>\n","categories":[],"tags":[]},{"title":"linux 系统ctl","url":"http://tanlent.coding.me/linux-系统ctl/","content":"<h4 id=\"systemctl\"><a href=\"#systemctl\" class=\"headerlink\" title=\"systemctl\"></a>systemctl</h4><ul>\n<li><p>列出所有可用单元 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ systemctl list-unit-files</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>列出所有运行中单元</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ systemctl list-units</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>列出所有失败单元 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ systemctl –failed</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>检查某个单元（如 crond.service）是否启用 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ systemctl is-enabledcrond.service</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>列出所有服务 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ systemctl list-unit-files –type=service</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Linux中如何启动、重启、停止、重载服务以及检查服务（如 httpd.service）状态</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ systemctl start httpd.service</span><br><span class=\"line\">$ systemctl restart httpd.service</span><br><span class=\"line\">$ systemctl stop httpd.service</span><br><span class=\"line\">$ systemctl reload httpd.service</span><br><span class=\"line\">$ systemctl status httpd.service</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<blockquote>\n<p>注意：当我们使用systemctl的start，restart，stop和reload命令时，终端不会输出任何内容，只有status命令可以打印输出。</p>\n</blockquote>\n<ul>\n<li><p>如何激活服务并在开机时启用或禁用服务（即系统启动时自动启动mysql.service服务） </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ systemctl is-active mysql.service</span><br><span class=\"line\">$ systemctl enable mysql.service</span><br><span class=\"line\">$ systemctl disable mysql.service</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>如何屏蔽（让它不能启动）或显示服务（如ntpdate.service） </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ systemctl mask ntpdate.services</span><br><span class=\"line\">$ ln -s ‘/dev/null”/etc/systemd/system/ntpdate.service’</span><br><span class=\"line\">$ systemctl unmask ntpdate.service</span><br><span class=\"line\">$ rm ‘/etc/systemd/system/ntpdate.service’</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>使用systemctl命令杀死服务 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ systemctl killcrond</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>列出所有系统挂载点 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ systemctl list-unit-files –type=mount</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>挂载、卸载、重新挂载、重载系统挂载点并检查系统中挂载点状态 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ systemctl start tmp.mount</span><br><span class=\"line\">$ systemctl stop tmp.mount</span><br><span class=\"line\">$ systemctl restart tmp.mount</span><br><span class=\"line\">$ systemctl reload tmp.mount</span><br><span class=\"line\">$ systemctl status tmp.mount</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在启动时激活、启用或禁用挂载点（系统启动时自动挂载） </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ systemctl is-active tmp.mount</span><br><span class=\"line\">$ systemctl enable tmp.mount</span><br><span class=\"line\">$ systemctl disable tmp.mount</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在Linux中屏蔽（让它不能启用）或可见挂载点 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ systemctl mask tmp.mount</span><br><span class=\"line\">$ ln -s ‘/dev/null”/etc/systemd/system/tmp.mount’</span><br><span class=\"line\">$ systemctl unmask tmp.mount</span><br><span class=\"line\">$ rm ‘/etc/systemd/system/tmp.mount’</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>列出所有可用系统套接口 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ systemctl list-unit-files –type=socket</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>检查某个服务的所有配置细节 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ systemctl showmysql</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>获取某个服务（httpd）的依赖性列表 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ systemctl list-dependencies httpd.service</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动救援模式 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ systemctl rescue</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>进入紧急模式 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ systemctl emergency</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>列出当前使用的运行等级 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ systemctl get-default</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动运行等级5，即图形模式 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ systemctl isolate runlevel5.target</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>或<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ systemctl isolate graphical.target</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>启动运行等级3，即多用户模式（命令行） <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ systemctl isolate runlevel3.target</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>或<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ systemctl isolate multiuser.target</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li><p>设置多用户模式或图形模式为默认运行等级 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ systemctl set-default runlevel3.target</span><br><span class=\"line\">$ systemctl set-default runlevel5.target</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>重启、停止、挂起、休眠系统或使系统进入混合睡眠 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ systemctl reboot</span><br><span class=\"line\">$ systemctl halt</span><br><span class=\"line\">$ systemctl suspend</span><br><span class=\"line\">$ systemctl hibernate</span><br><span class=\"line\">$ systemctl hybrid-sleep</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<blockquote>\n<p>对于不知运行等级为何物的人，说明如下。</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Runlevel 0 : 关闭系统</span><br><span class=\"line\">Runlevel 1 : 救援，维护模式</span><br><span class=\"line\">Runlevel 3 : 多用户，无图形系统</span><br><span class=\"line\">Runlevel 4 : 多用户，无图形系统</span><br><span class=\"line\">Runlevel 5 : 多用户，图形化系统</span><br><span class=\"line\">Runlevel 6 : 关闭并重启机器</span><br></pre></td></tr></table></figure>\n","categories":["linux"],"tags":["linux"]},{"title":"kubernetes之kubectl常用命令汇总","url":"http://tanlent.coding.me/kubernetes之kubectl常用命令汇总/","content":"<h4 id=\"get\"><a href=\"#get\" class=\"headerlink\" title=\"get\"></a>get</h4><blockquote>\n<p>获取pod信息</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubectl get po</span><br><span class=\"line\">$ kubectl get po -o wide</span><br><span class=\"line\">$ kubectl get po -o wide --all-namespaces</span><br><span class=\"line\">$ kubectl get po -o wide --namespace=kube-system</span><br><span class=\"line\">$ kubectl get po -o wide -n kube-system</span><br><span class=\"line\">$ kubectl get pods -n monitoring | grep -v Running</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>获取namespace、rc、svc等信息</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubectl get namespace</span><br><span class=\"line\">$ kubectl get rc</span><br><span class=\"line\">$ kubectl get nodes</span><br><span class=\"line\">$ kubectl get svc</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>获取一些更具体的信息，可以通过使用选项“-o” 如：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubectl get po xxxx -o yaml  -n xxxx</span><br><span class=\"line\">$ kubectl get po xxxx -o json  -n xxxx</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>使用”-o=custom-columns=“定义直接获取指定内容的值</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubectl get po xxxx -o=custom-columns=LABELS:.xxx.xxx.xxx</span><br></pre></td></tr></table></figure>\n<h4 id=\"describe\"><a href=\"#describe\" class=\"headerlink\" title=\"describe\"></a>describe</h4><blockquote>\n<p>获取某个resource的集群信息</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubectl describe pod xxx</span><br></pre></td></tr></table></figure>\n<h4 id=\"create\"><a href=\"#create\" class=\"headerlink\" title=\"create\"></a>create</h4><blockquote>\n<p>根据文件或输入创建集群resource</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubectl create -f xxxx.yaml</span><br></pre></td></tr></table></figure>\n<h4 id=\"replace\"><a href=\"#replace\" class=\"headerlink\" title=\"replace\"></a>replace</h4><blockquote>\n<p>对已有资源进行更新、替换</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubectl replace -f xxxx.yaml</span><br></pre></td></tr></table></figure>\n<h4 id=\"patch\"><a href=\"#patch\" class=\"headerlink\" title=\"patch\"></a>patch</h4><blockquote>\n<p>如果一个容器已经在运行，这时需要对一些容器属性进行修改，又不想删除容器，或不方便通过replace的方式进行更新。kubernetes还提供了一种在容器运行时，直接对容器进行修改的方式，就是patch命令。例如：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubectl patch pod xxxx -p &apos;&#123;&quot;metadata&quot;:&#123;&quot;labels&quot;:&#123;&quot;app&quot;:&quot;nginx-3&quot;&#125;&#125;&#125;&apos;</span><br></pre></td></tr></table></figure>\n<h4 id=\"edit\"><a href=\"#edit\" class=\"headerlink\" title=\"edit\"></a>edit</h4><blockquote>\n</blockquote>\n<h4 id=\"delete\"><a href=\"#delete\" class=\"headerlink\" title=\"delete\"></a>delete</h4><blockquote>\n<p>强制删除</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubectl delete pod NAME --grace-period=0 --force</span><br></pre></td></tr></table></figure>\n<h4 id=\"批量删除\"><a href=\"#批量删除\" class=\"headerlink\" title=\"批量删除\"></a>批量删除</h4><blockquote>\n<p>删除状态为Evicted的pod</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubectl get pods | grep Evicted | awk &apos;&#123;print $1&#125;&apos; | xargs kubectl delete pod</span><br></pre></td></tr></table></figure>\n","categories":["kubernetes"],"tags":["kubernetes"]},{"title":"yum 源","url":"http://tanlent.coding.me/yum-源/","content":"<h3 id=\"切换阿里云yum源\"><a href=\"#切换阿里云yum源\" class=\"headerlink\" title=\"切换阿里云yum源\"></a>切换阿里云yum源</h3><ul>\n<li>CentOS7</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd  /etc/yum.repos.d/</span><br><span class=\"line\">wget  http://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class=\"line\">mv  CentOS-Base.repo CentOS-Base.repo.bak</span><br><span class=\"line\">mv Centos-7.repo CentOS-Base.repo</span><br><span class=\"line\">yum install yum-fastestmirror </span><br><span class=\"line\">yum clean all</span><br><span class=\"line\">yum makecache</span><br><span class=\"line\">yum update</span><br></pre></td></tr></table></figure>\n","categories":[],"tags":["yum"]},{"title":"LVS+keepalived双机双vip","url":"http://tanlent.coding.me/LVS-keepalived双机双vip/","content":"<h4 id=\"环境目标\"><a href=\"#环境目标\" class=\"headerlink\" title=\"环境目标\"></a>环境目标</h4><table>\n<thead>\n<tr>\n<th>名称</th>\n<th>hostname</th>\n<th>IP</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>VIP1</td>\n<td>漂移</td>\n<td>192.168.48.201</td>\n</tr>\n<tr>\n<td>VIP2</td>\n<td>漂移</td>\n<td>192.168.48.202</td>\n</tr>\n<tr>\n<td>LVSServer1</td>\n<td>node4</td>\n<td>192.165.48.104</td>\n</tr>\n<tr>\n<td>LVSServer2</td>\n<td>node5</td>\n<td>192.165.48.105</td>\n</tr>\n<tr>\n<td>RealServer1</td>\n<td>node4</td>\n<td>192.165.48.104</td>\n</tr>\n<tr>\n<td>RealServer2</td>\n<td>node5</td>\n<td>192.165.48.105</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"安装openssl\"><a href=\"#安装openssl\" class=\"headerlink\" title=\"安装openssl\"></a>安装openssl</h4><ul>\n<li>yum安装<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ yum -y install openssl</span><br><span class=\"line\">$ yum -y install openssl-devel</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h4 id=\"安装-keepalived-和-ipvsadm\"><a href=\"#安装-keepalived-和-ipvsadm\" class=\"headerlink\" title=\"安装 keepalived 和 ipvsadm\"></a>安装 keepalived 和 ipvsadm</h4><ul>\n<li><p>下载keepalived压缩包</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ wget http://www.keepalived.org/software/keepalived-1.2.13.tar.gz </span><br><span class=\"line\">$ tar zxvf keepalived-1.2.13.tar.gz</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>编译安装keepalived</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd keepalived-1.2.13</span><br><span class=\"line\">$ ./configure --prefix=/usr/local/keepalived</span><br><span class=\"line\">$ make &amp;&amp; make install</span><br><span class=\"line\">$ cp /usr/local/keepalived/sbin/keepalived /usr/sbin/</span><br><span class=\"line\">$ cp /usr/local/keepalived/etc/sysconfig/keepalived /etc/sysconfig/</span><br><span class=\"line\">$ cp /usr/local/keepalived/etc/rc.d/init.d/keepalived /etc/init.d/</span><br><span class=\"line\">$ mkdir /etc/keepalived</span><br><span class=\"line\">$ cd /etc/keepalive</span><br><span class=\"line\">$ cp /usr/local/keepalived/etc/keepalived/keepalived.conf ./</span><br><span class=\"line\">$ chkconfig keepalived on</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装ipvsadm</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ yum install -y ipvsadm</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>配置keepalived.conf</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ vim /etc/keepalived/keepalived.conf</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>LVSServer1配置内容如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">! Configuration File for keepalived</span><br><span class=\"line\"> </span><br><span class=\"line\">global_defs &#123;  </span><br><span class=\"line\">   notification_email &#123;  </span><br><span class=\"line\">     caoqib@yonyou.com  </span><br><span class=\"line\">   &#125;  </span><br><span class=\"line\">   notification_email_from caoqib@yonyou.com  </span><br><span class=\"line\">   smtp_server localhost  </span><br><span class=\"line\">   smtp_connect_timeout 30  </span><br><span class=\"line\">   router_id  NodeA  </span><br><span class=\"line\">&#125; </span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\">vrrp_instance VI_1 &#123;</span><br><span class=\"line\">    state MASTER</span><br><span class=\"line\">    interface eth0</span><br><span class=\"line\">    virtual_router_id 51</span><br><span class=\"line\">    priority 100</span><br><span class=\"line\">    advert_int 1</span><br><span class=\"line\">    authentication &#123;</span><br><span class=\"line\">        auth_type PASS</span><br><span class=\"line\">        auth_pass 1111</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    virtual_ipaddress &#123;</span><br><span class=\"line\">        192.168.48.201</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">vrrp_instance VI_2 &#123;</span><br><span class=\"line\">    state BACKUP</span><br><span class=\"line\">    interface eth0</span><br><span class=\"line\">    virtual_router_id 60</span><br><span class=\"line\">    priority 80</span><br><span class=\"line\">    advert_int 1</span><br><span class=\"line\">    authentication &#123;</span><br><span class=\"line\">        auth_type PASS</span><br><span class=\"line\">        auth_pass 2222</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    virtual_ipaddress &#123;</span><br><span class=\"line\">        192.168.48.202</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\">virtual_server 192.168.48.201 80 &#123; </span><br><span class=\"line\">   delay_loop 6                  </span><br><span class=\"line\">   lb_algo rr                     </span><br><span class=\"line\">   lb_kind DR                            </span><br><span class=\"line\">   persistence_timeout 0           </span><br><span class=\"line\">   protocol TCP            </span><br><span class=\"line\">   sorry_server 127.0.0.1 80  </span><br><span class=\"line\">   real_server 192.168.48.104 80 &#123;   </span><br><span class=\"line\">       weight 1                      </span><br><span class=\"line\">        HTTP_GET &#123;</span><br><span class=\"line\">            url &#123; </span><br><span class=\"line\">              path /index.html</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            connect_timeout 3</span><br><span class=\"line\">            nb_get_retry 3</span><br><span class=\"line\">            delay_before_retry 3</span><br><span class=\"line\">        &#125;       </span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   real_server 192.168.48.105 80 &#123;    </span><br><span class=\"line\">       weight 1</span><br><span class=\"line\">        HTTP_GET &#123;</span><br><span class=\"line\">            url &#123; </span><br><span class=\"line\">              path /index.html </span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            connect_timeout 3</span><br><span class=\"line\">            nb_get_retry 3</span><br><span class=\"line\">            delay_before_retry 3</span><br><span class=\"line\">        &#125;        </span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">virtual_server 192.168.48.202 80 &#123;</span><br><span class=\"line\">   delay_loop 6</span><br><span class=\"line\">   lb_algo rr</span><br><span class=\"line\">   lb_kind DR</span><br><span class=\"line\">   persistence_timeout 0</span><br><span class=\"line\">   protocol TCP</span><br><span class=\"line\">   sorry_server 127.0.0.1 80</span><br><span class=\"line\">   real_server 192.168.48.104 80 &#123;</span><br><span class=\"line\">       weight 1</span><br><span class=\"line\">        HTTP_GET &#123;</span><br><span class=\"line\">            url &#123;</span><br><span class=\"line\">              path /index.html</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            connect_timeout 3</span><br><span class=\"line\">            nb_get_retry 3</span><br><span class=\"line\">            delay_before_retry 3</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   real_server 192.168.48.105 80 &#123;</span><br><span class=\"line\">       weight 1</span><br><span class=\"line\">        HTTP_GET &#123;</span><br><span class=\"line\">            url &#123;</span><br><span class=\"line\">              path /index.html</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            connect_timeout 3</span><br><span class=\"line\">            nb_get_retry 3</span><br><span class=\"line\">            delay_before_retry 3</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>LVSServer2配置内容如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">! Configuration File for keepalived</span><br><span class=\"line\"> </span><br><span class=\"line\">global_defs &#123;  </span><br><span class=\"line\">   notification_email &#123;  </span><br><span class=\"line\">     caoqib@yonyou.com  </span><br><span class=\"line\">   &#125;  </span><br><span class=\"line\">   notification_email_from caoqib@yonyou.com  </span><br><span class=\"line\">   smtp_server localhost  </span><br><span class=\"line\">   smtp_connect_timeout 30  </span><br><span class=\"line\">   router_id  NodeA  </span><br><span class=\"line\">&#125; </span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\">vrrp_instance VI_1 &#123;</span><br><span class=\"line\">    state BACKUP</span><br><span class=\"line\">    interface eth0</span><br><span class=\"line\">    virtual_router_id 51</span><br><span class=\"line\">    priority 80</span><br><span class=\"line\">    advert_int 1</span><br><span class=\"line\">    authentication &#123;</span><br><span class=\"line\">        auth_type PASS</span><br><span class=\"line\">        auth_pass 1111</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    virtual_ipaddress &#123;</span><br><span class=\"line\">        192.168.48.201</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">vrrp_instance VI_2 &#123;</span><br><span class=\"line\">    state MASTER</span><br><span class=\"line\">    interface eth0</span><br><span class=\"line\">    virtual_router_id 60</span><br><span class=\"line\">    priority 100</span><br><span class=\"line\">    advert_int 1</span><br><span class=\"line\">    authentication &#123;</span><br><span class=\"line\">        auth_type PASS</span><br><span class=\"line\">        auth_pass 2222</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    virtual_ipaddress &#123;</span><br><span class=\"line\">        192.168.48.202</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\">virtual_server 192.168.48.201 80 &#123; </span><br><span class=\"line\">   delay_loop 6                  </span><br><span class=\"line\">   lb_algo rr                     </span><br><span class=\"line\">   lb_kind DR                            </span><br><span class=\"line\">   persistence_timeout 0           </span><br><span class=\"line\">   protocol TCP            </span><br><span class=\"line\">   sorry_server 127.0.0.1 80  </span><br><span class=\"line\">   real_server 192.168.48.104 80 &#123;   </span><br><span class=\"line\">       weight 1                      </span><br><span class=\"line\">        HTTP_GET &#123;</span><br><span class=\"line\">            url &#123; </span><br><span class=\"line\">              path /index.html</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            connect_timeout 3</span><br><span class=\"line\">            nb_get_retry 3</span><br><span class=\"line\">            delay_before_retry 3</span><br><span class=\"line\">        &#125;       </span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   real_server 192.168.48.105 80 &#123;    </span><br><span class=\"line\">       weight 1</span><br><span class=\"line\">        HTTP_GET &#123;</span><br><span class=\"line\">            url &#123; </span><br><span class=\"line\">              path /index.html </span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            connect_timeout 3</span><br><span class=\"line\">            nb_get_retry 3</span><br><span class=\"line\">            delay_before_retry 3</span><br><span class=\"line\">        &#125;        </span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">virtual_server 192.168.48.202 80 &#123;</span><br><span class=\"line\">   delay_loop 6</span><br><span class=\"line\">   lb_algo rr</span><br><span class=\"line\">   lb_kind DR</span><br><span class=\"line\">   persistence_timeout 0</span><br><span class=\"line\">   protocol TCP</span><br><span class=\"line\">   sorry_server 127.0.0.1 80</span><br><span class=\"line\">   real_server 192.168.48.104 80 &#123;</span><br><span class=\"line\">       weight 1</span><br><span class=\"line\">        HTTP_GET &#123;</span><br><span class=\"line\">            url &#123;</span><br><span class=\"line\">              path /index.html</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            connect_timeout 3</span><br><span class=\"line\">            nb_get_retry 3</span><br><span class=\"line\">            delay_before_retry 3</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   real_server 192.168.48.105 80 &#123;</span><br><span class=\"line\">       weight 1</span><br><span class=\"line\">        HTTP_GET &#123;</span><br><span class=\"line\">            url &#123;</span><br><span class=\"line\">              path /index.html</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            connect_timeout 3</span><br><span class=\"line\">            nb_get_retry 3</span><br><span class=\"line\">            delay_before_retry 3</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>重启keepalived</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ service keepalived restart</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>RealServer1的配置脚本如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/bin/bash</span><br><span class=\"line\">#author:caoqib</span><br><span class=\"line\"> </span><br><span class=\"line\">VIP=192.168.48.201</span><br><span class=\"line\">RIP1=192.168.48.104</span><br><span class=\"line\">RIP2=192.168.48.105</span><br><span class=\"line\"> </span><br><span class=\"line\">case &quot;$1&quot; in</span><br><span class=\"line\">start)</span><br><span class=\"line\">echo &quot; start LVS of RealServer&quot;</span><br><span class=\"line\">ifconfig eth0: $VIP broadcast $VIP netmask 255.255.255.0 up</span><br><span class=\"line\">route add -host $VIP dev eth0:</span><br><span class=\"line\">echo &quot;1&quot; &gt; /proc/sys/net/ipv4/conf/lo/arp_ignore</span><br><span class=\"line\">echo &quot;2&quot; &gt; /proc/sys/net/ipv4/conf/lo/arp_announce</span><br><span class=\"line\">echo &quot;1&quot; &gt; /proc/sys/net/ipv4/conf/all/arp_ignore</span><br><span class=\"line\">echo &quot;2&quot; &gt; /proc/sys/net/ipv4/conf/all/arp_announce</span><br><span class=\"line\">sysctl -p &gt; /dev/null 2&gt;&amp;1</span><br><span class=\"line\">;;</span><br><span class=\"line\">stop)</span><br><span class=\"line\">ifconfig eth0: down</span><br><span class=\"line\">echo &quot;close LVS of RealServer&quot;</span><br><span class=\"line\">echo &quot;0&quot; &gt; /proc/sys/net/ipv4/conf/lo/arp_ignore</span><br><span class=\"line\">echo &quot;0&quot; &gt; /proc/sys/net/ipv4/conf/lo/arp_announce</span><br><span class=\"line\">echo &quot;0&quot; &gt; /proc/sys/net/ipv4/conf/all/arp_ignore</span><br><span class=\"line\">echo &quot;0&quot; &gt; /proc/sys/net/ipv4/conf/all/arp_announce</span><br><span class=\"line\">;;</span><br><span class=\"line\">*)</span><br><span class=\"line\">echo &quot;Usage: $0 start|stop&quot;</span><br><span class=\"line\">exit 1</span><br><span class=\"line\">esac</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>RealServer2的配置脚本如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/bin/bash</span><br><span class=\"line\">#author:caoqib</span><br><span class=\"line\"> </span><br><span class=\"line\">VIP=192.168.48.202</span><br><span class=\"line\">RIP1=192.168.48.104</span><br><span class=\"line\">RIP2=192.168.48.105</span><br><span class=\"line\"> </span><br><span class=\"line\">case &quot;$1&quot; in</span><br><span class=\"line\">start)</span><br><span class=\"line\">echo &quot; start LVS of RealServer&quot;</span><br><span class=\"line\">ifconfig eth0: $VIP broadcast $VIP netmask 255.255.255.0 up</span><br><span class=\"line\">route add -host $VIP dev eth0:</span><br><span class=\"line\">echo &quot;1&quot; &gt; /proc/sys/net/ipv4/conf/lo/arp_ignore</span><br><span class=\"line\">echo &quot;2&quot; &gt; /proc/sys/net/ipv4/conf/lo/arp_announce</span><br><span class=\"line\">echo &quot;1&quot; &gt; /proc/sys/net/ipv4/conf/all/arp_ignore</span><br><span class=\"line\">echo &quot;2&quot; &gt; /proc/sys/net/ipv4/conf/all/arp_announce</span><br><span class=\"line\">sysctl -p &gt; /dev/null 2&gt;&amp;1</span><br><span class=\"line\">;;</span><br><span class=\"line\">stop)</span><br><span class=\"line\">ifconfig eth0: down</span><br><span class=\"line\">echo &quot;close LVS of RealServer&quot;</span><br><span class=\"line\">echo &quot;0&quot; &gt; /proc/sys/net/ipv4/conf/lo/arp_ignore</span><br><span class=\"line\">echo &quot;0&quot; &gt; /proc/sys/net/ipv4/conf/lo/arp_announce</span><br><span class=\"line\">echo &quot;0&quot; &gt; /proc/sys/net/ipv4/conf/all/arp_ignore</span><br><span class=\"line\">echo &quot;0&quot; &gt; /proc/sys/net/ipv4/conf/all/arp_announce</span><br><span class=\"line\">;;</span><br><span class=\"line\">*)</span><br><span class=\"line\">echo &quot;Usage: $0 start|stop&quot;</span><br><span class=\"line\">exit 1</span><br><span class=\"line\">esac</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在两台RealServer上分别执行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ realserver.sh  start</span><br></pre></td></tr></table></figure></li>\n</ul>\n","categories":[],"tags":["LVS"]},{"title":"kubernetes 部署（kubeadm 方式）","url":"http://tanlent.coding.me/kubernetes-部署（kubeadm-方式）/","content":"<h4 id=\"基础环境安装\"><a href=\"#基础环境安装\" class=\"headerlink\" title=\"基础环境安装\"></a>基础环境安装</h4><ul>\n<li><p>关闭防火墙</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ systemctl stop firewalld</span><br><span class=\"line\">$ systemctl disable firewalld</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>禁用SELINUX</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ setenforce 0</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<blockquote>\n<p>修改/etc/selinux/config文件内容SELINUX=disabled</p>\n</blockquote>\n<ul>\n<li>创建k8s.conf文件<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class=\"line\">net.bridge.bridge-nf-call-iptables = 1</span><br><span class=\"line\">net.ipv4.ip_forward = 1</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>执行命令使修改生效<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ modprobe br_netfilter</span><br><span class=\"line\">$ sysctl -p /etc/sysctl.d/k8s.conf</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li><p>设置hostname</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hostnamectl --transient set-hostname node1</span><br><span class=\"line\">$ hostnamectl --transient set-static node1</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>关闭系统swap</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ swapoff -a</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<blockquote>\n<p>修改/etc/fstab文件，注释掉swap的自动挂载，使用 free -m 确认swap已经关闭。swappiness参数调整，修改 /etc/sysctl.d/k8s.conf 添加下面一行：vm.swappiness=0，执行sysctl -p /etc/sysctl.d/k8s.conf使修改生效。</p>\n</blockquote>\n<h4 id=\"docker的安装与卸载\"><a href=\"#docker的安装与卸载\" class=\"headerlink\" title=\"docker的安装与卸载\"></a>docker的安装与卸载</h4><ul>\n<li><p>安装docker</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class=\"line\">$ yum-config-manager \\</span><br><span class=\"line\">    --add-repo \\</span><br><span class=\"line\">#    https://download.docker.com/linux/centos/docker-ce.repo   //科学上网</span><br><span class=\"line\">https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class=\"line\">$ yum list docker-ce.x86_64  --showduplicates |sort -r</span><br><span class=\"line\">$ yum makecache fast</span><br><span class=\"line\">$ yum install -y --setopt=obsoletes=0  docker-ce-18.06.1.ce-3.el7</span><br><span class=\"line\">$ systemctl start docker</span><br><span class=\"line\">$ systemctl enable docker</span><br><span class=\"line\">$ iptables -nvL  //确认一下iptables filter表中FOWARD链的默认策略(pllicy)为ACCEPT</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>卸载docker</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ yum list installed | grep docker</span><br><span class=\"line\">$ yum -y remove docker-engine.x86_64</span><br><span class=\"line\">$ rm -rf /var/lib/docker</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h4 id=\"安装kubeadm和kubelet\"><a href=\"#安装kubeadm和kubelet\" class=\"headerlink\" title=\"安装kubeadm和kubelet\"></a>安装kubeadm和kubelet</h4><ul>\n<li><p>创建yum源</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat &lt;&lt;EOF &gt; /etc/yum.repos.d/kubernetes.repo</span><br><span class=\"line\">[kubernetes]</span><br><span class=\"line\">name=Kubernetes</span><br><span class=\"line\">baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/</span><br><span class=\"line\">enabled=1</span><br><span class=\"line\">gpgcheck=1</span><br><span class=\"line\">repo_gpgcheck=1</span><br><span class=\"line\">gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg</span><br><span class=\"line\">        https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span><br><span class=\"line\">EOF</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>yum安装kubelet、kubeadm和kubectl</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ yum makecache fast</span><br><span class=\"line\">$ yum install -y kubelet kubeadm kubectl</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>查看kubernetes需要安装的版本</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubeadm config images list</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>kubernetes 国内镜像列表</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker pull caoqib/kube-apiserver:v1.12.0</span><br><span class=\"line\">$ docker pull caoqib/kube-controller-manager:v1.12.0</span><br><span class=\"line\">$ docker pull caoqib/kube-scheduler:v1.12.0</span><br><span class=\"line\">$ docker pull caoqib/kube-proxy:v1.12.0</span><br><span class=\"line\">$ docker pull caoqib/pause:3.1</span><br><span class=\"line\">$ docker pull caoqib/etcd:3.2.24</span><br><span class=\"line\">$ docker pull caoqib/coredns:1.2.2</span><br><span class=\"line\">$ docker pull caoqib/flannel:v0.10.0-amd64</span><br><span class=\"line\"></span><br><span class=\"line\">$ docker tag caoqib/kube-proxy:v1.12.0 k8s.gcr.io/kube-proxy:v1.12.0</span><br><span class=\"line\">$ docker tag caoqib/kube-scheduler:v1.12.0 k8s.gcr.io/kube-scheduler:v1.12.0</span><br><span class=\"line\">$ docker tag caoqib/kube-apiserver:v1.12.0 k8s.gcr.io/kube-apiserver:v1.12.0</span><br><span class=\"line\">$ docker tag caoqib/kube-controller-manager:v1.12.0 k8s.gcr.io/kube-controller-manager:v1.12.0</span><br><span class=\"line\">$ docker tag caoqib/etcd:3.2.24  k8s.gcr.io/etcd:3.2.24</span><br><span class=\"line\">$ docker tag caoqib/pause:3.1  k8s.gcr.io/pause:3.1</span><br><span class=\"line\">$ docker tag caoqib/coredns:1.2.2  k8s.gcr.io/coredns:1.2.2</span><br><span class=\"line\">$ docker tag caoqib/flannel:v0.10.0-amd64 quay.io/coreos/flannel:v0.10.0-amd64</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>使用kubeadm init初始化集群</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ systemctl enable kubelet.service</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>创建初始化配置文件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat &gt;/etc/kubernetes/kubeadm-master.config&lt;&lt;EOF</span><br><span class=\"line\">apiVersion: kubeadm.k8s.io/v1alpha2</span><br><span class=\"line\">kind: MasterConfiguration</span><br><span class=\"line\">kubernetesVersion: v1.12.0</span><br><span class=\"line\">imageRepository: registry.cn-hangzhou.aliyuncs.com/google_containers</span><br><span class=\"line\">api:</span><br><span class=\"line\">  advertiseAddress: 18.16.202.35 </span><br><span class=\"line\"></span><br><span class=\"line\">controllerManagerExtraArgs:</span><br><span class=\"line\">  node-monitor-grace-period: 10s</span><br><span class=\"line\">  pod-eviction-timeout: 10s</span><br><span class=\"line\"></span><br><span class=\"line\">networking:</span><br><span class=\"line\">  podSubnet: 10.244.0.0/16</span><br><span class=\"line\">  </span><br><span class=\"line\">kubeProxy:</span><br><span class=\"line\">  config:</span><br><span class=\"line\">    mode: ipvs</span><br><span class=\"line\">    # mode: iptables</span><br><span class=\"line\">EOF</span><br></pre></td></tr></table></figure></p>\n<p>执行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubeadm init --config  /etc/kubernetes/kubeadm-master.config</span><br><span class=\"line\">$ mkdir -p $HOME/.kube</span><br><span class=\"line\">$ cp -i /etc/kubernetes/admin.conf $HOME/.kube/config</span><br><span class=\"line\">$ chown $(id -u):$(id -g) $HOME/.kube/config</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li><p>忘记token</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubeadm token list</span><br><span class=\"line\">$ kubeadm token create --print-join-command</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>kubeadm init 重置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubeadm reset</span><br><span class=\"line\">$ rm -rf /var/lib/cni/ $HOME/.kube/config</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>设置环境变量</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ export KUBECONFIG=/etc/kubernetes/kubelet.conf</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>添加node节点</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubeadm join 192.168.61.11:6443 --token zalj3i.q831ehufqb98d1ic --discovery-token-ca-cert-hash sha256:6ee48b19ba61a2dda77f6b60687c5fd11072ab898cfdfef32a68821d1dbe8efa \\</span><br><span class=\"line\"> --ignore-preflight-errors=Swap</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>移除node节点</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubectl drain node2 --delete-local-data --force --ignore-daemonsets</span><br><span class=\"line\">$ kubectl delete node node2</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h4 id=\"部署-kubernetes-组件\"><a href=\"#部署-kubernetes-组件\" class=\"headerlink\" title=\"部署 kubernetes 组件\"></a>部署 kubernetes 组件</h4><ul>\n<li><p>Flannel</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd ~ &amp;&amp; mkdir flannel &amp;&amp; cd flannel</span><br><span class=\"line\">$ wget https://raw.githubusercontent.com/coreos/flannel/v0.10.0/Documentation/kube-flannel.yml</span><br><span class=\"line\">$ kubectl apply -f ~/flannel/kube-flannel.yml</span><br><span class=\"line\">$ kubectl get ds -l app=flannel -n kube-system</span><br><span class=\"line\">$ kubectl get pods --namespace kube-system</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Helm</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd ~ &amp;&amp; mkdir helm &amp;&amp; cd helm</span><br><span class=\"line\">$ wget https://storage.googleapis.com/kubernetes-helm/helm-v2.11.0-linux-amd64.tar.gz</span><br><span class=\"line\">$ tar -zxvf helm-v2.11.0-linux-amd64.tar.gz</span><br><span class=\"line\">$ cp linux-amd64/helm /usr/local/bin/</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>rbac<br>创建rbac-config.yaml文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ vi ~/k8s/rbac-config.yaml</span><br><span class=\"line\"></span><br><span class=\"line\">apiVersion: v1</span><br><span class=\"line\">kind: ServiceAccount</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  name: tiller</span><br><span class=\"line\">  namespace: kube-system</span><br><span class=\"line\">---</span><br><span class=\"line\">apiVersion: rbac.authorization.k8s.io/v1beta1</span><br><span class=\"line\">kind: ClusterRoleBinding</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  name: tiller</span><br><span class=\"line\">roleRef:</span><br><span class=\"line\">  apiGroup: rbac.authorization.k8s.io</span><br><span class=\"line\">  kind: ClusterRole</span><br><span class=\"line\">  name: cluster-admin</span><br><span class=\"line\">subjects:</span><br><span class=\"line\">  - kind: ServiceAccount</span><br><span class=\"line\">    name: tiller</span><br><span class=\"line\">    namespace: kube-system</span><br><span class=\"line\">    </span><br><span class=\"line\">$ kubectl create -f rbac-config.yaml</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>tiller(helm方式)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ helm init --upgrade -i registry.cn-hangzhou.aliyuncs.com/google_containers/tiller:v2.5.1 --stable-repo-url https://kubernetes.oss-cn-hangzhou.aliyuncs.com/charts</span><br><span class=\"line\">$ kubectl get pod -n kube-system -l app=helm</span><br><span class=\"line\">$ helm version</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>nginx ingress</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubectl label node node1 node-role.kubernetes.io/edge=</span><br><span class=\"line\">node/node1 labeled</span><br><span class=\"line\">$ vi ingress-nginx.yaml</span><br><span class=\"line\"></span><br><span class=\"line\">controller:</span><br><span class=\"line\">  service:</span><br><span class=\"line\">    externalIPs:</span><br><span class=\"line\">      - 192.168.61.11</span><br><span class=\"line\">  nodeSelector:</span><br><span class=\"line\">    node-role.kubernetes.io/edge: &apos;&apos;</span><br><span class=\"line\">  tolerations:</span><br><span class=\"line\">      - key: node-role.kubernetes.io/master</span><br><span class=\"line\">        operator: Exists</span><br><span class=\"line\">        effect: NoSchedule</span><br><span class=\"line\"></span><br><span class=\"line\">defaultBackend:</span><br><span class=\"line\">  nodeSelector:</span><br><span class=\"line\">    node-role.kubernetes.io/edge: &apos;&apos;</span><br><span class=\"line\">  tolerations:</span><br><span class=\"line\">      - key: node-role.kubernetes.io/master</span><br><span class=\"line\">        operator: Exists</span><br><span class=\"line\">        effect: NoSchedule</span><br><span class=\"line\"></span><br><span class=\"line\">$helm install stable/nginx-ingress \\</span><br><span class=\"line\">-n nginx-ingress \\</span><br><span class=\"line\">--namespace ingress-nginx  \\</span><br><span class=\"line\">-f ingress-nginx.yaml</span><br><span class=\"line\">$ helm repo update</span><br><span class=\"line\">$ kubectl get pod -n ingress-nginx -o wide</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>构建CA服务器</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ openssl genrsa -out /etc/pki/CA/private/cakey.pem 4096</span><br><span class=\"line\">$ openssl req -new -x509 -key /etc/pki/CA/private/cakey.pem -out /etc/pki/CA/private/cacert.pem -days 365</span><br><span class=\"line\">$ openssl x509 -in cacert.pem -noout -text //查看生成的自签证书</span><br><span class=\"line\">$ kubectl create secret tls frognew-com-tls-secret --cert=cacert.pem --key=cakey.pem -n kube-system</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>dashboard</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ vi ~/k8s/kubernetes-dashboard.yaml</span><br><span class=\"line\"></span><br><span class=\"line\">ingress:</span><br><span class=\"line\">  enabled: true</span><br><span class=\"line\">  hosts: </span><br><span class=\"line\">    - k8s.frognew.com</span><br><span class=\"line\">  annotations:</span><br><span class=\"line\">    nginx.ingress.kubernetes.io/ssl-redirect: &quot;true&quot;</span><br><span class=\"line\">    nginx.ingress.kubernetes.io/secure-backends: &quot;true&quot;</span><br><span class=\"line\">  tls:</span><br><span class=\"line\">    - secretName: frognew-com-tls-secret</span><br><span class=\"line\">      hosts:</span><br><span class=\"line\">      - k8s.frognew.com</span><br><span class=\"line\">rbac:</span><br><span class=\"line\">  clusterAdminRole: true</span><br><span class=\"line\">  </span><br><span class=\"line\">$ helm install stable/kubernetes-dashboard \\</span><br><span class=\"line\">-n kubernetes-dashboard \\</span><br><span class=\"line\">--namespace kube-system  \\</span><br><span class=\"line\">-f kubernetes-dashboard.yaml</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<blockquote>\n<p>获取kubernetes-dashboard令牌</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubectl -n kube-system get secret | grep kubernetes-dashboard-token</span><br><span class=\"line\">$ kubectl describe -n kube-system secret/kubernetes-dashboard-token-XXXX</span><br></pre></td></tr></table></figure>\n<ul>\n<li>metrics-server<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git clone https://github.com/kubernetes-incubator/metrics-server</span><br><span class=\"line\">$ cd metrics-server</span><br><span class=\"line\">$ kubectl create -f deploy/1.8+/     ||   kubectl apply -f deploy/1.8+/</span><br></pre></td></tr></table></figure></li>\n</ul>\n","categories":["kubernetes"],"tags":["kubernetes"]},{"title":"k8s+prometheus-opeartor部署","url":"http://tanlent.coding.me/k8s-prometheus-opeartor部署/","content":"<h4 id=\"机器配置\"><a href=\"#机器配置\" class=\"headerlink\" title=\"机器配置\"></a>机器配置</h4><table>\n<thead>\n<tr>\n<th>名称</th>\n<th>hostname</th>\n<th>IP</th>\n<th>OS</th>\n<th>MEM</th>\n<th>DISK</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>publish/dns</td>\n<td>publish</td>\n<td>192.165.48.103</td>\n<td>CentOS7.6</td>\n<td>4GB</td>\n<td>30GB</td>\n</tr>\n<tr>\n<td>docker-registry/lvs</td>\n<td>dockerRegistry</td>\n<td>192.165.48.104</td>\n<td>CentOS7.6</td>\n<td>4GB</td>\n<td>10GB</td>\n</tr>\n<tr>\n<td>k8s-master1/k8s-node1/etcd1</td>\n<td>node1</td>\n<td>192.165.48.105</td>\n<td>CentOS7.6</td>\n<td>4GB</td>\n<td>10GB</td>\n</tr>\n<tr>\n<td>k8s-master2/k8s-node2/etcd2</td>\n<td>node2</td>\n<td>192.165.48.106</td>\n<td>CentOS7.6</td>\n<td>4GB</td>\n<td>10GB</td>\n</tr>\n<tr>\n<td>VIP1</td>\n<td>漂移</td>\n<td>192.168.48.201</td>\n<td>–</td>\n<td>–</td>\n<td>– </td>\n</tr>\n<tr>\n<td>VIP2</td>\n<td>漂移</td>\n<td>192.168.48.202</td>\n<td>–</td>\n<td>–</td>\n<td>– </td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"安装基础环境\"><a href=\"#安装基础环境\" class=\"headerlink\" title=\"安装基础环境\"></a>安装基础环境</h4><blockquote>\n<p>配置阿里yum源</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd  /etc/yum.repos.d/</span><br><span class=\"line\">$ wget  http://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class=\"line\">$ mv  CentOS-Base.repo CentOS-Base.repo.bak</span><br><span class=\"line\">$ mv Centos-7.repo CentOS-Base.repo</span><br><span class=\"line\">$ yum install yum-fastestmirror -y</span><br><span class=\"line\">$ yum clean all</span><br><span class=\"line\">$ yum makecache</span><br><span class=\"line\">$ yum update -y</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>安装git、curl、pip、gcc gcc-c++、fabric模块(仅publish机器)</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ yum -y install git curl epel-release python-pip</span><br><span class=\"line\">$ yum -y install gcc gcc-c++</span><br><span class=\"line\">$ pip install --upgrade pip</span><br><span class=\"line\">$ pip install Fabric==1.14.0</span><br><span class=\"line\">$ yum -y install python-paramiko</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>更改网卡名称</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ vi /etc/default/grub</span><br><span class=\"line\">GRUB_CMDLINE_LINUX 加上 net.ifnames=0 biosdevname=0</span><br><span class=\"line\">$ grub2-mkconfig -o /boot/grub2/grub.cfg</span><br><span class=\"line\">$ cd /etc/sysconfig/network-scripts/</span><br><span class=\"line\">文件名称及NAME=eth0、DEVICE=eth0更改为ifcfg-eth0</span><br><span class=\"line\">$ reboot</span><br></pre></td></tr></table></figure>\n<h4 id=\"安装k8s\"><a href=\"#安装k8s\" class=\"headerlink\" title=\"安装k8s\"></a>安装k8s</h4><ul>\n<li><p>下载自动化脚本</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ mkdir ~/git &amp; cd ~/git</span><br><span class=\"line\">$ git clone https://github.com/tanlentbaby/install_k8s.git</span><br><span class=\"line\">$ cd install_k8s</span><br><span class=\"line\">$ mv ls-files-xxxx.gz .  (提前下载好压缩包)</span><br><span class=\"line\">$ tar zxvf ls-files-xxxx.gz</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改配置文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ vi fabfile.py</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动并安装k8s</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./install.sh</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h4 id=\"安装Prometheus-Opeartor\"><a href=\"#安装Prometheus-Opeartor\" class=\"headerlink\" title=\"安装Prometheus-Opeartor\"></a>安装Prometheus-Opeartor</h4><ul>\n<li><p>下载自动化脚本</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd ~/git</span><br><span class=\"line\">$ git clone https://github.com/coreos/prometheus-operator.git</span><br><span class=\"line\">或：</span><br><span class=\"line\">$ wget https://github.com/coreos/prometheus-operator/archive/v0.23.0.tar.gz并解压 （我用的是这种）</span><br><span class=\"line\"></span><br><span class=\"line\">$ tar zxvf v0.23.0.tar.gz</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改配置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubectl create namespace monitoring</span><br><span class=\"line\">$ cd prometheus-operator-0.23.0</span><br><span class=\"line\">$ vim bundle.yaml (将三处namespace更改为上文创建的monitoring)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>部署</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubectl apply -f bundle.yaml</span><br><span class=\"line\">$ kubectl apply -f contrib/kube-prometheus/manifests/</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>验证</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubectl get all -n monitoring</span><br></pre></td></tr></table></figure></li>\n</ul>\n","categories":["kubernetes"],"tags":["kubernetes"]},{"title":"about","url":"http://tanlent.coding.me/about/index.html","content":"","categories":[],"tags":[]},{"title":"category","url":"http://tanlent.coding.me/category/index.html","content":"","categories":[],"tags":[]},{"title":"project","url":"http://tanlent.coding.me/project/index.html","content":"","categories":[],"tags":[]},{"title":"tag","url":"http://tanlent.coding.me/tag/index.html","content":"","categories":[],"tags":[]},{"title":"search","url":"http://tanlent.coding.me/search/index.html","content":"","categories":[],"tags":[]},{"title":"","url":"http://tanlent.coding.me/css/personal-style.css","content":"@-webkit-keyframes fadeInFromNone{0%{display:none;opacity:0}1%{display:block;opacity:0}100%{display:block;opacity:1}}@keyframes fadeInFromNone{0%{display:none;opacity:0}1%{display:block;opacity:0}100%{display:block;opacity:1}}@-webkit-keyframes scaleIn{0%{-webkit-transform:scale(0);transform:scale(0);opacity:0}100%{-webkit-transform:scale(0);transform:scale(0);opacity:1}}@keyframes scaleIn{0%{-webkit-transform:scale(0);transform:scale(0);opacity:0}100%{-webkit-transform:scale(0);transform:scale(0);opacity:1}}@-webkit-keyframes zoomIn{0%{-webkit-transform:scale3d(0, 0, 0);transform:scale3d(0, 0, 0);opacity:0}50%{opacity:1}}@keyframes zoomIn{0%{-webkit-transform:scale3d(0, 0, 0);transform:scale3d(0, 0, 0);opacity:0}50%{opacity:1}}@-webkit-keyframes fadeIn{from{opacity:0}to{opacity:1}}@keyframes fadeIn{from{opacity:0}to{opacity:1}}@font-face{font-family:'fontello';src:url(\"/fonts/fontello.eot?58336539\");src:url(\"/fonts/fontello.eot?58336539#iefix\") format(\"embedded-opentype\"),url(\"/fonts/fontello.woff2?58336539\") format(\"woff2\"),url(\"/fonts/fontello.woff?58336539\") format(\"woff\"),url(\"/fonts/fontello.ttf?58336539\") format(\"truetype\"),url(\"/fonts/fontello.svg?58336539#fontello\") format(\"svg\");font-weight:normal;font-style:normal}[class^=\"icon-\"]:before,[class*=\" icon-\"]:before{font-family:\"fontello\";font-style:normal;font-weight:normal;speak:none;display:inline-block;text-decoration:inherit;width:1em;margin-right:.2em;text-align:center;font-variant:normal;text-transform:none;line-height:1em;margin-left:.2em;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.icon-feather:before{content:'\\e800'}.icon-cc:before{content:'\\e802'}.icon-long:before{content:'\\e806'}.icon-angle-left:before{content:'\\e807'}.icon-text:before{content:'\\e808'}.icon-hu:before{content:'\\e809'}.icon-weibo:before{content:'\\e80a'}.icon-angle-down:before{content:'\\e80b'}.icon-archive:before{content:'\\e80c'}.icon-search:before{content:'\\e80d'}.icon-rss-2:before{content:'\\e80e'}.icon-heart:before{content:'\\e80f'}.icon-zhu:before{content:'\\e810'}.icon-user-1:before{content:'\\e811'}.icon-calendar-1:before{content:'\\e812'}.icon-ma:before{content:'\\e813'}.icon-box:before{content:'\\e814'}.icon-home:before{content:'\\e815'}.icon-shu:before{content:'\\e816'}.icon-calendar:before{content:'\\e817'}.icon-yang:before{content:'\\e818'}.icon-user:before{content:'\\e819'}.icon-info-circled-1:before{content:'\\e81a'}.icon-lsit:before{content:'\\e81b'}.icon-rss:before{content:'\\e81c'}.icon-info:before{content:'\\e81d'}.icon-wechat:before{content:'\\e81e'}.icon-comment:before{content:'\\e81f'}.icon-she:before{content:'\\e820'}.icon-info-with-circle:before{content:'\\e821'}.icon-niu:before{content:'\\e822'}.icon-mail:before{content:'\\e823'}.icon-list:before{content:'\\e824'}.icon-gou:before{content:'\\e825'}.icon-tu:before{content:'\\e826'}.icon-twitter:before{content:'\\e827'}.icon-location:before{content:'\\e828'}.icon-hou:before{content:'\\e829'}.icon-qq:before{content:'\\e82a'}.icon-tag:before{content:'\\e82b'}.icon-angle-right:before{content:'\\e82c'}.icon-github:before{content:'\\e82d'}.icon-angle-up:before{content:'\\e82e'}.icon-ji:before{content:'\\e82f'}@font-face{font-family:'calligraffittiregular';src:url(\"/fonts/calligraffitti-regular-webfont.eot\");src:url(\"/fonts/calligraffitti-regular-webfont.eot?#iefix\") format(\"embedded-opentype\"),url(\"/fonts/calligraffitti-regular-webfont.woff2\") format(\"woff2\"),url(\"/fonts/calligraffitti-regular-webfont.woff\") format(\"woff\"),url(\"/fonts/calligraffitti-regular-webfont.ttf\") format(\"truetype\"),url(\"/fonts/calligraffitti-regular-webfont.svg#calligraffittiregular\") format(\"svg\");font-weight:normal;font-style:normal}@font-face{font-family:\"Lobster-Regular\";src:url(\"/fonts/Lobster-Regular.eot\");src:url(\"/fonts/Lobster-Regular.eot?#iefix\") format(\"embedded-opentype\"),url(\"/fonts/Lobster-Regular.woff\") format(\"woff\"),url(\"/fonts/Lobster-Regular.ttf\") format(\"truetype\"),url(\"/fonts/Lobster-Regular.svg#Lobster-Regular\") format(\"svg\");font-style:normal;font-weight:normal}@font-face{font-family:\"PoiretOne-Regular\";src:url(\"/fonts/PoiretOne-Regular.eot\");src:url(\"/fonts/PoiretOne-Regular.eot?#iefix\") format(\"embedded-opentype\"),url(\"/fonts/PoiretOne-Regular.woff\") format(\"woff\"),url(\"/fonts/PoiretOne-Regular.ttf\") format(\"truetype\"),url(\"/fonts/PoiretOne-Regular.svg#PoiretOne-Regular\") format(\"svg\");font-style:normal;font-weight:normal}@font-face{font-family:\"JosefinSans-Thin\";src:url(\"/fonts/JosefinSans-Thin.eot\");src:url(\"/fonts/JosefinSans-Thin.eot?#iefix\") format(\"embedded-opentype\"),url(\"/fonts/JosefinSans-Thin.woff\") format(\"woff\"),url(\"/fonts/JosefinSans-Thin.ttf\") format(\"truetype\"),url(\"/fonts/JosefinSans-Thin.svg#JosefinSans-Thin\") format(\"svg\");font-style:normal;font-weight:normal}/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:bold}dfn{font-style:italic}h1{font-size:2em;margin:0.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-0.5em}sub{bottom:-0.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace, monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=\"button\"],input[type=\"reset\"],input[type=\"submit\"]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=\"checkbox\"],input[type=\"radio\"]{box-sizing:border-box;padding:0}input[type=\"number\"]::-webkit-inner-spin-button,input[type=\"number\"]::-webkit-outer-spin-button{height:auto}input[type=\"search\"]{-webkit-appearance:textfield;box-sizing:content-box}input[type=\"search\"]::-webkit-search-cancel-button,input[type=\"search\"]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid #c0c0c0;margin:0 2px;padding:0.35em 0.625em 0.75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:bold}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}body,.smooth-container{scroll-behavior:smooth}html,body{font-family:PingFangSC-Regular,'Roboto', Verdana, \"Open Sans\", \"Helvetica Neue\", \"Helvetica\", \"Hiragino Sans GB\", \"Microsoft YaHei\", \"Source Han Sans CN\", \"WenQuanYi Micro Hei\", Arial, sans-serif;-webkit-font-smoothing:antialiased;-webkit-tap-highlight-color:rgba(0,0,0,0);width:100%}html{overflow:hidden;overflow-y:auto}code,pre,samp{font-family:PingFangSC-Regular, 'Roboto', Verdana, \"Open Sans\", \"Helvetica Neue\", \"Helvetica\", \"Hiragino Sans GB\", \"Microsoft YaHei\", \"Source Han Sans CN\", \"WenQuanYi Micro Hei\", Arial, sans-serif}*{box-sizing:border-box}a{text-decoration:none}a:hover{text-decoration:none}ul{line-height:1.8em;padding:0;list-style:none}ul li{list-style:none}.text-center{text-align:center}@media screen and (max-width: 767px){html,body{overflow-x:hidden}}code{padding:3px 6px;vertical-align:middle;border-radius:4px;background-color:#f7f7f7;color:#e96900}figure.highlight{display:block;overflow-x:auto;margin:0 0 15px;padding:16px;color:#555;font-size:14px;border-radius:6px;background-color:#f7f7f7;overflow-y:hidden}.highlight pre{line-height:1.5em;overflow-y:hidden;white-space:pre-wrap;word-wrap:break-word}.highlight .gutter pre{padding-right:30px;text-align:right;border:0;background-color:transparent}.highlight .code{width:100%}.highlight figcaption{font-size:.8em;color:#999}.highlight figcaption a{float:right}.highlight table{width:100%;margin:0;border:0}.highlight table td,.highlight table th{border:0;color:#555;font-size:14px;padding:0}.highlight pre{margin:0;background-color:transparent}.highlight .comment,.highlight .meta{color:#b3b3b3}.highlight .string,.highlight .value,.highlight .variable,.highlight .template-variable,.highlight .strong,.highlight .emphasis,.highlight .quote,.highlight .inheritance,.highlight.ruby .symbol,.highlight.xml .cdata{color:#1abc9c}.highlight .keyword,.highlight .selector-tag,.highlight .type,.highlight.javascript .function{color:#e96900}.highlight .preprocessor,.highlight .built_in,.highlight .params,.highlight .constant,.highlight .symbol,.highlight .bullet,.highlight .attribute,.highlight.css .hexcolor{color:#1abc9c}.highlight .number,.highlight .literal{color:#ae81ff}.highlight .section,.highlight .header,.highlight .name,.highlight .function,.highlight.python .decorator,.highlight.python .title,.highlight.ruby .function .title,.highlight.ruby .title .keyword,.highlight.perl .sub,.highlight.javascript .title,.highlight.coffeescript .title{color:#525252}.highlight .tag,.highlight .regexp{color:#2973b7}.highlight .title,.highlight .attr,.highlight .selector-id,.highlight .selector-class,.highlight .selector-attr,.highlight .selector-pseudo,.highlight.ruby .constant,.highlight.xml .tag .title,.highlight.xml .pi,.highlight.xml .doctype,.highlight.html .doctype,.highlight.css .id,.highlight.css .pseudo,.highlight .class,.highlight.ruby .class .title{color:#2973b7}.highlight.css .code .attribute{color:#e96900}.highlight.css .class{color:#525252}.tag .attribute{color:#e96900}.highlight .addition{color:#55a532;background-color:#eaffea}.highlight .deletion{color:#bd2c00;background-color:#ffecec}.highlight .link{text-decoration:underline}.function .keyword{color:#0092db}.function .params{color:#525252}.function .title{color:#525252}.hide{display:none}.show{display:block}.content{width:500px;margin:40px auto 80px;border-left:4px solid #f9f9f9}.content.content-archive .toolbox,.content.content-about .toolbox,.content.content-search .toolbox,.content.content-project .toolbox,.content.content-link .toolbox,.content.content-category .toolbox,.content.content-tag .toolbox{margin-bottom:15px;margin-left:-20px}.disqus-comments{margin-top:40px}@media screen and (max-width: 767px){.content.content-post,.content.content-about,.content.content-search,.content.content-project,.content.content-link,.content.content-category,.content.content-tag,.content.content-archive{overflow-x:hidden;width:100%;margin-top:30px;padding-right:10px;padding-left:12px}.content.content-post{padding:0}.content.content-category .list-post,.content.content-tag .list-post{border-left:none}.content.content-category .list-post .item-title:before,.content.content-category .list-post .item-post:before,.content.content-tag .list-post .item-title:before,.content.content-tag .list-post .item-post:before{display:none}.content.content-category .list-post .item-title,.content.content-category .list-post .item-post,.content.content-tag .list-post .item-title,.content.content-tag .list-post .item-post{padding-left:0}}@media only screen and (min-device-width: 768px) and (max-device-width: 1024px){.content.content-tag,.content.content-post,.content.content-category{width:95%}}.article-content h1,.article-content h2,.article-content h3,.article-content h4,.article-content h5,.article-content h6{font-weight:normal;margin:28px 0 15px;color:#000}.article-content h1{font-size:24px}.article-content h2{font-size:20px}.article-content h3{font-size:16px}.article-content h4{font-size:14px}.article-content a{color:#1abc9c}.article-content a:hover{color:#148f77}.article-content strong{color:#000}.article-content a strong{color:#1abc9c}.article-content p{font-size:15px;line-height:2em;margin-bottom:20px;color:#555}.article-content ol,.article-content ul{font-size:15px;color:#555}.article-content img{max-width:100%;height:auto}.article-content ul li{position:relative;padding-left:14px}.article-content ul li:before{position:absolute;top:12px;left:-2px;width:4px;height:4px;margin-left:2px;content:' ';border-radius:50%;background:#bbb}.article-content p+ul{margin-top:-10px}.article-content ul+p{margin-top:25px}.article-content ol{padding-left:20px}.article-content blockquote{margin:0;padding:2px 30px;color:#555;border-left:6px solid #eee;background:#fafafa}html.bg{background-color:transparent;background-size:cover;background-position:center center;background-repeat:no-repeat}.content-home{position:absolute;top:50%;width:100%;height:100%;height:300px;margin-top:-150px;margin-bottom:100px}.content-home .avatar img{display:inline-block;width:100px;height:100px;border-radius:50%;-o-object-fit:cover;object-fit:cover;overflow:hidden}.content-home .name{font-size:26px;font-weight:bold;font-style:normal;line-height:50px;height:50px;margin:0 auto;letter-spacing:-.03em}.content-home .slogan{font-size:16px;font-weight:200;margin-bottom:26px;color:#666}.content-home .nav{color:#bbb}.content-home .nav .item{display:inline-block}.content-home .nav .item a{font-size:14px;display:inline-block;text-align:center;text-decoration:none;color:#000;transition-duration:0.5s;transition-propety:background-color}.content-home .nav .item a:hover{color:#1abc9c}.content-home .nav .item:last-child span{display:none}@media (max-width: 640px){.content-home .title{font-size:3rem;font-weight:100;letter-spacing:-.05em}}hr{max-width:400px;height:1px;margin-top:-1px;border:none;background-image:linear-gradient(0deg, transparent, #d5d5d5, transparent);background-image:-webkit-linear-gradient(0deg, transparent, #d5d5d5, transparent)}html.dark hr{display:block}html.dark .content-home .name{color:#fff}html.dark .content-home .slogan{color:#fff}html.dark .content-home .nav{color:#fff}html.dark .content-home .nav .item a{color:#fff}html.dark .content-home .nav .item a:hover{color:#1abc9c}.content.content-category{margin-bottom:100px}.content.content-about .about-list{margin-left:-2px}.content.content-about .about-list .about-item{position:relative;padding:10px 0}.content.content-about .about-list .about-item .text{padding-left:20px}.content.content-about a.text-value-url{color:#1abc9c}.content.content-about a.text-value-url:hover{color:#148f77}.content.content-about .dot{position:absolute;top:50%;width:10px;height:10px;margin-top:-5px;margin-left:-5px;content:' ';border-radius:50%}.content.content-about .dot.icon{font-size:12px;line-height:20px;width:20px;height:20px;margin-top:-10px;margin-left:-10px;padding-left:2px;color:rgba(255,255,255,0.6)}.content.content-about .dot.dot-0{background:#1abc9c}.content.content-about .dot.dot-1{background:#3498db}.content.content-about .dot.dot-2{background:#9b59b6}.content.content-about .dot.dot-3{background:#e67e22}.content.content-about .dot.dot-4{background:#e74c3c}@media screen and (min-width: 768px){.content.content-about{width:500px}}@media screen and (max-width: 767px){.content.content-about .about-list{margin-left:0;border-left:4px solid #f9f9f9}.content.content-about .about-list .dot.icon{margin-left:-12px}}.content.content-search .wrap-search-box{position:relative;padding-left:20px;margin-bottom:40px}.content.content-search .wrap-search-box:before{position:absolute;top:50%;left:-2px;width:8px;height:8px;margin-top:-4px;margin-left:-4px;content:' ';border-radius:50%;background:#ddd}.content.content-search .wrap-search-box .search-box{position:relative;background:#f0f0f0;height:36px;border-radius:36px;width:400px;overflow:hidden}.content.content-search .wrap-search-box .search-box .input-search{position:relative;border:none;width:100%;height:100%;padding-left:32px;background:transparent}.content.content-search .wrap-search-box .search-box .input-search:focus{outline:none}.content.content-search .wrap-search-box .search-box .icon-search{position:absolute;top:0;left:2px;width:30px;height:36px;line-height:36px;text-align:center;border-radius:36px;color:#bbb}.content.content-search .list-search .tip{padding-left:20px;color:#999}.content.content-search .list-search .item .color-hightlight{color:red}.content.content-search .list-search .item .title{font-size:18px;font-weight:bold;transition-duration:0.5s;color:#333;vertical-align:middle;max-width:430px;transition-propety:background-color;margin:30px 0px 0px}.content.content-search .list-search .item .title:hover{color:#1abc9c}.content.content-search .list-search .item a{position:relative;display:block;padding-left:20px}.content.content-search .list-search .item a:before{position:absolute;top:50%;left:-2px;width:8px;height:8px;margin-top:-4px;margin-left:-4px;content:' ';border-radius:50%;background:#ddd}.content.content-search .list-search .item .post-content{padding-left:20px;color:#555}.content.content-search .list-search .item .post-content>*{font-size:14px !important}@media screen and (min-width: 768px){.content.content-search{width:500px}}@media screen and (max-width: 767px){.content.content-search .wrap-search-box{padding-left:0;margin-bottom:40px}.content.content-search .wrap-search-box:before{display:none}.content.content-search .wrap-search-box .search-box{width:100%}.content.content-search .list-search .tip{padding-left:0}.content.content-search .list-search .item .title{font-size:18px}.content.content-search .list-search .item a{padding-left:0}.content.content-search .list-search .item a:before{display:none}.content.content-search .list-search .item .post-content{padding-left:0}}.post-header{margin:0 auto;padding-top:20px}.post-header.LEFT{width:720px;border-left:4px solid #f0f0f0}.post-header.CENTER{width:4px;background:#f0f0f0}.post-header .toolbox{margin-top:-40px;margin-left:-18px;background:#fff;transition-duration:0.5s;transition-propety:transform}.post-header .toolbox:hover{-webkit-transform:translate(0, 30px);transform:translate(0, 30px)}.post-header .toolbox .toolbox-entry .icon-angle-down{margin-top:16px;display:inline-block;line-height:0;font-size:22px;border-radius:50%}.post-header .toolbox .toolbox-entry .toolbox-entry-text{display:none}.content.content-post{border-left:none;margin:50px auto}.content.content-post.CENTER .article-header{text-align:center}.content.content-post .article-header{margin-bottom:40px}.content.content-post .article-header .post-title{font-size:32px;font-weight:normal;margin:0 0 12px;color:#000}.content.content-post .article-header .article-meta{font-size:12px;margin-top:8px;margin-bottom:30px;color:#999}.content.content-post .article-header .article-meta a{color:#999}.content.content-post .article-header .article-meta>span>*{vertical-align:middle}.content.content-post .article-header .article-meta i{display:inline-block;margin:0 -4px 0 4px}@media screen and (min-width: 768px){.content.content-post{width:760px;margin-top:60px}}@media screen and (max-width: 767px){.post-header{display:none}.content.content-post .article-content,.content.content-post .post-title{padding-right:10px;padding-left:10px}.content.content-post .article-header .post-title{font-size:24px}.content.content-archive .archive-body{border-left:none}.content.content-archive .archive-body .item-title:before,.content.content-archive .archive-body .item-post:before{display:none}.content.content-archive .archive-body .item-year,.content.content-archive .archive-body .item-post{padding-left:0}}@media only screen and (min-device-width: 768px) and (max-device-width: 1024px){.content.content-post{width:95%}}.content.content-link .link-list .link-item{position:relative;margin-left:-23px;padding:8px 0}.content.content-link .link-list .link-item a{display:block;color:#444}.content.content-link .link-list .link-item a .avatar,.content.content-link .link-list .link-item a .wrap-info{display:inline-block;vertical-align:middle}.content.content-link .link-list .link-item a .avatar{width:44px;height:44px;border-radius:50%}.content.content-link .link-list .link-item a .avatar:hover{opacity:.8}.content.content-link .link-list .link-item a .wrap-info{line-height:1.3em}.content.content-link .link-list .link-item a .wrap-info .name{font-weight:bold}.content.content-link .link-list .link-item a .wrap-info .name:hover{color:#1abc9c}.content.content-link .link-list .link-item a .wrap-info .info{font-size:13px;color:#999;min-width:240px}.content.content-link .tip{margin:20px 0 0 -15px;color:#ddd}.content.content-link .tip i,.content.content-link .tip span{vertical-align:middle}.content.content-link .tip .icon-mail{width:24px;height:24px;text-align:center;line-height:24px;border-radius:50%;color:#fff;background:#f0f0f0;font-size:12px;display:inline-block;padding-left:1px}@media screen and (min-width: 768px){.content.content-link{width:500px}.content.content-link hr{display:none;height:0}}@media screen and (max-width: 767px){.content.content-link{width:100%}.content.content-link .link-list .link-item{position:relative;margin-left:0;padding:8px 0 8px 10px}}.content.content-project .project-list{margin-left:-2px}.content.content-project .project-list .project-item{position:relative;padding:10px 0}.content.content-project .project-list .project-item .text{padding-left:20px}.content.content-project .project-list .img-article-wrapper{display:grid;grid-gap:10px;grid-template-areas:\"media\" \"detail\"}.content.content-project .project-list .img-article-wrapper .project-media{grid-area:media}.content.content-project .project-list .img-article-wrapper .project-detail{grid-area:detail}@media (min-width: 500px){.content.content-project .project-list .img-article-wrapper{grid-template-columns:2fr 1fr;grid-template-areas:\"media  detail\"}}.content.content-project img.project-img{display:block;width:100%}.content.content-project a.project-url{color:#1abc9c}.content.content-project a.project-url:hover{color:#148f77}.content.content-project .intro{color:#666}.content.content-project .dot{position:absolute;top:50%;width:10px;height:10px;margin-top:-5px;margin-left:-5px;content:' ';border-radius:50%}.content.content-project .dot.icon{font-size:12px;line-height:20px;width:20px;height:20px;margin-top:-10px;margin-left:-10px;padding-left:2px;color:rgba(255,255,255,0.6)}.content.content-project .dot.dot-0{background:#1abc9c}.content.content-project .dot.dot-1{background:#3498db}.content.content-project .dot.dot-2{background:#9b59b6}.content.content-project .dot.dot-3{background:#e67e22}.content.content-project .dot.dot-4{background:#e74c3c}@media screen and (min-width: 768px){.content.content-project{width:500px}}@media screen and (max-width: 767px){.content.content-project .project-list{margin-left:0}}table{width:100%;max-width:100%;border:1px solid #dfdfdf;margin-bottom:30px}table>thead>tr>th,table>thead>tr>td{border-bottom-width:2px}table td,table th{line-height:1.5;padding:8px;text-align:left;vertical-align:top;color:#555;border:1px solid #dfdfdf;font-size:15px}.page-header{position:relative;margin-bottom:30px;background:#fff}.page-header .breadcrumb{width:100px;font-size:16px;margin-bottom:10px;margin-left:-52px;color:#d0d0d0;text-align:center}.page-header .breadcrumb .location{margin-left:0;font-size:13px}.page-header .breadcrumb i{font-size:26px;color:#dfdfdf}.page-header .box-blog-info{display:block}.page-header .box-blog-info .avatar,.page-header .box-blog-info .info{display:inline-block;vertical-align:middle}.page-header .box-blog-info img{width:60px;height:60px;vertical-align:middle;border-radius:50%;-o-object-fit:cover;object-fit:cover;overflow:hidden}.page-header .box-blog-info .info .name{font-size:24px;font-weight:bold;margin:0;color:#000}.page-header .box-blog-info .info .slogan{display:inline-block;color:#999}@media screen and (min-width: 768px){.page-header{margin-bottom:30px}.page-header .home-entry{display:inline-block}.page-header .box-blog-info{display:block;margin-left:-30px}}@media screen and (max-width: 767px){.page-header{margin-bottom:30px;text-align:center}.page-header .breadcrumb{display:none}.page-header .home-entry{display:none}.page-header .box-blog-info .avatar{display:block}.page-header .box-blog-info .avatar img{width:60px;height:60px;vertical-align:middle;border-radius:50%}.page-header .box-blog-info .info{display:inline-block}.page-header .box-blog-info .info .name{display:inline-block;margin-top:10px;margin-bottom:8px}.page-header .box-blog-info .info .slogan{display:block}}.pagination .page-nav .page-number{font-family:'calligraffittiregular';font-size:15px;font-weight:bolder;line-height:33px;display:inline-block;width:28px;height:28px;margin:auto 6px;text-align:center;color:#444;border-radius:50%}.pagination .page-nav .page-number:hover,.pagination .page-nav .page-number.current{color:#444;background:#f0f0f0}.pagination .page-nav .space{letter-spacing:2px}.pagination .page-nav .extend{font-size:20px;line-height:25px;display:inline-block;width:28px;height:28px;text-align:center;color:#444;border-radius:50%;transition-duration:.5s;transition-propety:background-color}.pagination .page-nav .extend:hover{color:#444;background:#f0f0f0}.list-post{line-height:2.8em}.item-title{position:relative;margin-top:40px;padding-left:20px}.item-title:before{position:absolute;top:50%;left:-2px;width:10px;height:10px;margin-top:-9px;margin-left:-5px;content:' ';border-radius:50%}.item-title.item-title-0:before{background:#1abc9c}.item-title.item-title-1:before{background:#3498db}.item-title.item-title-2:before{background:#9b59b6}.item-title.item-title-3:before{background:#e67e22}.item-title.item-title-4:before{background:#e74c3c}.item-post{position:relative;padding-left:20px}.item-post:before{position:absolute;top:50%;left:-2px;width:8px;height:8px;margin-top:-4px;margin-left:-4px;content:' ';border-radius:50%;background:#ddd}.item-post .post-date{font-size:12px;display:inline-block;color:#888}.item-post .post-title{font-size:16px;font-weight:normal;position:relative;display:inline-block;transition-duration:.5s;color:#333;vertical-align:middle;text-overflow:ellipsis;max-width:430px;white-space:nowrap;overflow:hidden;transition-propety:background-color}.item-post .post-title:hover{color:#1abc9c}@media screen and (min-width: 400px) and (max-width: 500px){.item-post .post-title{max-width:330px}}@media screen and (min-width: 320px) and (max-width: 399px){.item-post .post-title{max-width:250px}}@media screen and (max-width: 319px){.item-post .post-title{max-width:200px}}.item-year{position:relative;margin-top:40px;padding-left:20px}.item-year a.text-year{font-family:'calligraffittiregular';font-size:20px;font-weight:bold;font-weight:bold;color:#222}.item-category-name{position:relative;margin-top:40px;padding-left:20px}.item-category-name .category-count{font-family:'calligraffittiregular';font-size:16px;font-weight:bold}.toolbox{position:relative;width:60px;height:40px;border-radius:20px;background:transparent}.toolbox:hover{width:200px}.toolbox:hover .toolbox-entry .icon-angle-down{display:none}.toolbox:hover .toolbox-entry .toolbox-entry-text{display:inline-block}.toolbox:hover .list-toolbox{display:block}.toolbox:hover .list-toolbox li a{-webkit-animation-duration:.8s;animation-duration:.8s;-webkit-animation-fill-mode:both;animation-fill-mode:both}.toolbox:hover .list-toolbox li:nth-child(1) a{-webkit-animation-name:fadeIn;animation-name:fadeIn}.toolbox:hover .list-toolbox li:nth-child(2) a{-webkit-animation-name:fadeIn;animation-name:fadeIn;-webkit-animation-delay:.1s;animation-delay:.1s}.toolbox:hover .list-toolbox li:nth-child(3) a{-webkit-animation-name:fadeIn;animation-name:fadeIn;-webkit-animation-delay:.2s;animation-delay:.2s}.toolbox:hover .list-toolbox li:nth-child(4) a{-webkit-animation-name:fadeIn;animation-name:fadeIn;-webkit-animation-delay:.3s;animation-delay:.3s}.toolbox:hover .list-toolbox li:nth-child(5) a{-webkit-animation-name:fadeIn;animation-name:fadeIn;-webkit-animation-delay:.4s;animation-delay:.4s}.toolbox:hover .list-toolbox li:nth-child(6) a{-webkit-animation-name:fadeIn;animation-name:fadeIn;-webkit-animation-delay:.5s;animation-delay:.5s}.toolbox:hover .list-toolbox li:nth-child(7) a{-webkit-animation-name:fadeIn;animation-name:fadeIn;-webkit-animation-delay:.6s;animation-delay:.6s}.toolbox:hover .list-toolbox li:nth-child(8) a{-webkit-animation-name:fadeIn;animation-name:fadeIn;-webkit-animation-delay:.7s;animation-delay:.7s}.toolbox .toolbox-entry{position:relative;font-size:13px;line-height:40px;display:block;width:40px;height:40px;margin-bottom:20px;transition-duration:.5s;text-align:center;color:#555;border-radius:50%;background:#f0f0f0;transition-propety:background-color}.toolbox .toolbox-entry .icon-angle-down{display:none}.toolbox .toolbox-entry .toolbox-entry-text{display:inline-block}.toolbox .toolbox-entry .icon-home{display:none;font-size:22px;color:#999}.toolbox .toolbox-entry:hover{cursor:pointer;background:#dfdfdf}.toolbox .toolbox-entry:hover .icon-angle-down,.toolbox .toolbox-entry:hover .toolbox-entry-text{display:none}.toolbox .toolbox-entry:hover .icon-home{display:inline-block}.toolbox .list-toolbox{position:absolute;top:-17px;left:46px;display:none;width:500px}.toolbox .list-toolbox .item-toolbox{display:inline-block}.toolbox .list-toolbox .item-toolbox a{font-size:13px;line-height:40px;display:inline-block;height:40px;margin-bottom:20px;transition-duration:.5s;text-align:center;color:#555;border-radius:20px;background:#f0f0f0;transition-propety:background-color}.toolbox .list-toolbox .item-toolbox a.CIRCLE{width:40px}.toolbox .list-toolbox .item-toolbox a.ROUND_RECT{padding:0 20px}.toolbox .list-toolbox .item-toolbox a:hover{background:#dfdfdf}@media screen and (max-width: 767px){.toolbox{display:none}}.toolbox-mobile{font-size:13px;line-height:40px;display:block;width:40px;height:40px;transition-duration:.5s;text-align:center;color:#555;border-radius:50%;background:#f0f0f0;position:fixed;left:12px;bottom:12px;z-index:10}@media screen and (min-width: 768px){.toolbox-mobile{display:none}}.tag-box{position:relative;margin-bottom:-20px;margin-left:-20px}.tag-box .tag-title{font-size:13px;line-height:40px;position:absolute;top:50%;width:40px;height:40px;margin-top:-20px;text-align:center;color:#555;border-radius:50%;background:#f0f0f0}.tag-box .tag-list{margin-left:50px}.tag-box .tag-list .tag-item{font-size:12px;line-height:30px;display:inline-block;height:30px;margin:5px 3px;padding:0 12px;color:#999;border-radius:15px;background:#f6f6f6}.tag-box .tag-list .tag-item:hover{color:#333;background:#f0f0f0}.tag-box .tag-list .tag-item .tag-size{font-family:'calligraffittiregular';font-weight:bold}@media screen and (max-width: 767px){.tag-box{margin-left:0}}.category-box{position:relative;margin-bottom:-20px;margin-left:-20px}.category-box .category-title{font-size:13px;line-height:40px;position:absolute;top:50%;width:40px;height:40px;margin-top:-20px;text-align:center;color:#555;border-radius:50%;background:#f0f0f0}.category-box .category-list{margin-left:50px}.category-box .category-list .category-item{font-size:12px;line-height:30px;display:inline-block;height:30px;margin:5px 3px;padding:0 12px;color:#999;border-radius:15px;background:#f6f6f6}.category-box .category-list .category-item:hover{color:#333;background:#f0f0f0}.category-box .category-list .category-item .category-size{font-family:'calligraffittiregular';font-weight:bold}@media screen and (max-width: 767px){.category-box{margin-left:0}}.toc-article{position:absolute;left:50%;margin-left:400px;top:200px;font-size:13px}.toc-article.fixed{position:fixed;top:20px}.toc-article ol{line-height:1.8em;padding-left:10px;list-style:none}.toc-article>li{margin:4px 0}.toc-article .toc-title{font-size:16px}.toc-article .toc{padding-left:0}.toc-article a.toc-link.active{color:#111;font-weight:bold}.toc-article a{color:#888}.toc-article a:hover{color:#6f6f6f}@media screen and (max-width: 1023px){.toc-article{display:none}}@media only screen and (min-device-width: 768px) and (max-device-width: 1024px){.toc-article{display:none}}a.back-top{position:fixed;bottom:40px;right:30px;background:#f0f0f0;height:40px;width:40px;border-radius:50%;line-height:34px;text-align:center;transition-duration:.5s;transition-propety:background-color;display:none}a.back-top.show{display:block}a.back-top i{color:#999;font-size:26px}a.back-top:hover{cursor:pointer;background:#dfdfdf}a.back-top:hover i{color:#666}@media screen and (max-width: 768px){a.back-top{display:none !important}}@media only screen and (min-device-width: 768px) and (max-device-width: 1024px){a.back-top{display:none !important}}.hint{position:relative;display:inline-block}.hint:before,.hint:after{position:absolute;z-index:1000000;transition:.5s ease;pointer-events:none;opacity:0}.hint:hover:before,.hint:hover:after{opacity:1}.hint:before{position:absolute;position:absolute;content:'';border:6px solid transparent;background:transparent}.hint:after{font-size:12px;line-height:32px;height:32px;padding:0 10px;content:'点击回首页';white-space:nowrap;color:#555;border-radius:4px;background:#f0f0f0}.hint--top:after{bottom:100%;left:50%;margin:0 0 -6px -10px}.hint--top:hover:before{margin-bottom:-10px}.hint--top:hover:after{margin-bottom:2px}.hint--bottom:before{top:100%;left:50%;margin:-14px 0 0 0;border-bottom-color:rgba(0,0,0,0.8)}.hint--bottom:after{top:100%;left:50%;margin:-2px 0 0 -10px}.hint--bottom:hover:before{margin-top:-6px}.hint--bottom:hover:after{margin-top:6px}.hint--right:before{bottom:50%;left:100%;margin:0 0 -4px -8px;border-right-color:rgba(0,0,0,0.8)}.hint--right:after{bottom:50%;left:100%;margin:0 0 -13px 4px}.hint--right:hover:before{margin:0 0 -4px -0}.hint--right:hover:after{margin:0 0 -13px 12px}.hint--left:before{right:100%;bottom:50%;margin:0 -8px -3px 0;border-left-color:#f0f0f0}.hint--left:after{right:100%;bottom:50%;margin:0 4px -13px 0}.hint--left:hover:before{margin:0 0 -3px 0}.hint--left:hover:after{margin:0 12px -13px 0}@media screen and (min-width: 768px){.fexo-comments{margin:0 auto 60px}.fexo-comments.comments-post{width:760px}.fexo-comments.comments-about{width:500px}.fexo-comments.comments-link{width:500px}}@media screen and (max-width: 767px){.fexo-comments{padding:10px}}.modal .cover{position:fixed;z-index:10;top:0;right:0;bottom:0;left:0;background:rgba(0,0,0,0.6)}.modal hr{max-width:320px;height:1px;margin-top:-1px;margin-bottom:0;border:none;background-image:linear-gradient(0deg, transparent, #dcdcdc, transparent);background-image:-webkit-linear-gradient(0deg, transparent, #dcdcdc, transparent)}.modal-dialog{position:fixed;z-index:11;bottom:0;width:100%;height:160px;transition:.3s ease-out;background:#fefefe}.modal-dialog.show-dialog{-webkit-transform:translate3d(0, 0, 0);transform:translate3d(0, 0, 0)}.modal-dialog.hide-dialog{-webkit-transform:translate3d(0, 100%, 0);transform:translate3d(0, 100%, 0)}.modal-body{height:70px;display:table;text-align:center;width:100%}.modal-body .list-toolbox{text-align:center;display:table-cell;vertical-align:middle}.modal-body .list-toolbox .item-toolbox{display:inline-block}.modal-body .list-toolbox .item-toolbox a{font-size:13px;line-height:40px;display:inline-block;height:40px;margin:5px 2px;transition-duration:.5s;text-align:center;color:#555;border-radius:20px;background:#f0f0f0;transition-propety:background-color}.modal-body .list-toolbox .item-toolbox a.CIRCLE{width:40px}.modal-body .list-toolbox .item-toolbox a.ROUND_RECT{padding:0 20px}.modal-body .list-toolbox .item-toolbox a:hover{background:#dfdfdf}.modal-header{font-size:13px;text-align:center;height:75px}.modal-header .btn-close{position:relative;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%);font-size:13px;line-height:40px;display:inline-block;width:40px;height:40px;transition-duration:.5s;text-align:center;text-decoration:none;color:#555;border-radius:20px;background:#f0f0f0}.modal-header .btn-close:hover{color:#919191}.btn-close:hover,.toolbox-mobile:hover{cursor:pointer}.donation{margin-top:40px}.donation .inner-donation{position:relative;width:160px;margin:auto}.donation .inner-donation:hover .donation-body{display:inline-block}.donation .btn-donation{display:inline-block;border:1px solid #dfdfdf;height:40px;width:140px;line-height:40px;border-radius:40px;padding:0;color:#aaa}.donation .btn-donation:hover{border:1px solid #ddd;color:#999;cursor:pointer}.donation .donation-body{display:none;position:absolute;box-shadow:0 4px 12px rgba(0,0,0,0.15);border-radius:4px;background:#fff;width:460px;height:292px;margin-top:-277px;margin-left:-300px}.donation .donation-body:before{content:\"\";display:block;position:absolute;width:0;height:0;border-color:transparent;border-width:6px;border-style:solid;box-sizing:border-box;border-top-color:#fff;top:100%;left:223px}.donation .donation-body .tip{height:40px;line-height:40px;color:#999;border-bottom:1px solid #f3f3f3}.donation .donation-body ul{display:inline-block}.donation .donation-body ul .item{width:220px;height:220px;display:inline-block}.donation .donation-body ul .item img{width:150px;height:150px}.box-prev-next{margin-top:-40px;margin-bottom:70px}.box-prev-next a,.box-prev-next .icon{display:inline-block}.box-prev-next a{text-align:center;line-height:36px;width:36px;height:36px;border-radius:50%;border:1px solid #dfdfdf}.box-prev-next a.pull-left{float:left}.box-prev-next a.pull-left .icon:before{margin-right:0.28em !important}.box-prev-next a.pull-right{float:right}.box-prev-next a.pull-right .icon:before{margin-left:0.28em !important}.box-prev-next a.hide{display:none !important}.box-prev-next a.show{display:block !important}.box-prev-next .icon{color:#ccc;font-size:24px;height:34px;line-height:34px}.box-prev-next .icon:hover{color:#bfbfbf}\n\n/*# sourceMappingURL=styles.css.map */\n\nhtml.page-home {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-image: url('/images/bg.jpg');\n  background-color: transparent;\n  background-size: cover;\n  background-position: center center;\n  background-repeat: no-repeat;\n\n  /*background: linear-gradient( #1abc9c, transparent), linear-gradient( 90deg, skyblue, transparent), linear-gradient( -90deg, coral, transparent);*/\n  /*background-blend-mode: screen;*/\n\n  /*background: linear-gradient(to left, #5f2c82, #49a09d);*/\n}","categories":[],"tags":[]},{"title":"","url":"http://tanlent.coding.me/css/styles.css","content":"@-webkit-keyframes fadeInFromNone{0%{display:none;opacity:0}1%{display:block;opacity:0}100%{display:block;opacity:1}}@keyframes fadeInFromNone{0%{display:none;opacity:0}1%{display:block;opacity:0}100%{display:block;opacity:1}}@-webkit-keyframes scaleIn{0%{-webkit-transform:scale(0);transform:scale(0);opacity:0}100%{-webkit-transform:scale(0);transform:scale(0);opacity:1}}@keyframes scaleIn{0%{-webkit-transform:scale(0);transform:scale(0);opacity:0}100%{-webkit-transform:scale(0);transform:scale(0);opacity:1}}@-webkit-keyframes zoomIn{0%{-webkit-transform:scale3d(0, 0, 0);transform:scale3d(0, 0, 0);opacity:0}50%{opacity:1}}@keyframes zoomIn{0%{-webkit-transform:scale3d(0, 0, 0);transform:scale3d(0, 0, 0);opacity:0}50%{opacity:1}}@-webkit-keyframes fadeIn{from{opacity:0}to{opacity:1}}@keyframes fadeIn{from{opacity:0}to{opacity:1}}@font-face{font-family:'fontello';src:url(\"/fonts/fontello.eot?58336539\");src:url(\"/fonts/fontello.eot?58336539#iefix\") format(\"embedded-opentype\"),url(\"/fonts/fontello.woff2?58336539\") format(\"woff2\"),url(\"/fonts/fontello.woff?58336539\") format(\"woff\"),url(\"/fonts/fontello.ttf?58336539\") format(\"truetype\"),url(\"/fonts/fontello.svg?58336539#fontello\") format(\"svg\");font-weight:normal;font-style:normal}[class^=\"icon-\"]:before,[class*=\" icon-\"]:before{font-family:\"fontello\";font-style:normal;font-weight:normal;speak:none;display:inline-block;text-decoration:inherit;width:1em;margin-right:.2em;text-align:center;font-variant:normal;text-transform:none;line-height:1em;margin-left:.2em;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.icon-feather:before{content:'\\e800'}.icon-cc:before{content:'\\e802'}.icon-long:before{content:'\\e806'}.icon-angle-left:before{content:'\\e807'}.icon-text:before{content:'\\e808'}.icon-hu:before{content:'\\e809'}.icon-weibo:before{content:'\\e80a'}.icon-angle-down:before{content:'\\e80b'}.icon-archive:before{content:'\\e80c'}.icon-search:before{content:'\\e80d'}.icon-rss-2:before{content:'\\e80e'}.icon-heart:before{content:'\\e80f'}.icon-zhu:before{content:'\\e810'}.icon-user-1:before{content:'\\e811'}.icon-calendar-1:before{content:'\\e812'}.icon-ma:before{content:'\\e813'}.icon-box:before{content:'\\e814'}.icon-home:before{content:'\\e815'}.icon-shu:before{content:'\\e816'}.icon-calendar:before{content:'\\e817'}.icon-yang:before{content:'\\e818'}.icon-user:before{content:'\\e819'}.icon-info-circled-1:before{content:'\\e81a'}.icon-lsit:before{content:'\\e81b'}.icon-rss:before{content:'\\e81c'}.icon-info:before{content:'\\e81d'}.icon-wechat:before{content:'\\e81e'}.icon-comment:before{content:'\\e81f'}.icon-she:before{content:'\\e820'}.icon-info-with-circle:before{content:'\\e821'}.icon-niu:before{content:'\\e822'}.icon-mail:before{content:'\\e823'}.icon-list:before{content:'\\e824'}.icon-gou:before{content:'\\e825'}.icon-tu:before{content:'\\e826'}.icon-twitter:before{content:'\\e827'}.icon-location:before{content:'\\e828'}.icon-hou:before{content:'\\e829'}.icon-qq:before{content:'\\e82a'}.icon-tag:before{content:'\\e82b'}.icon-angle-right:before{content:'\\e82c'}.icon-github:before{content:'\\e82d'}.icon-angle-up:before{content:'\\e82e'}.icon-ji:before{content:'\\e82f'}@font-face{font-family:'calligraffittiregular';src:url(\"/fonts/calligraffitti-regular-webfont.eot\");src:url(\"/fonts/calligraffitti-regular-webfont.eot?#iefix\") format(\"embedded-opentype\"),url(\"/fonts/calligraffitti-regular-webfont.woff2\") format(\"woff2\"),url(\"/fonts/calligraffitti-regular-webfont.woff\") format(\"woff\"),url(\"/fonts/calligraffitti-regular-webfont.ttf\") format(\"truetype\"),url(\"/fonts/calligraffitti-regular-webfont.svg#calligraffittiregular\") format(\"svg\");font-weight:normal;font-style:normal}@font-face{font-family:\"Lobster-Regular\";src:url(\"/fonts/Lobster-Regular.eot\");src:url(\"/fonts/Lobster-Regular.eot?#iefix\") format(\"embedded-opentype\"),url(\"/fonts/Lobster-Regular.woff\") format(\"woff\"),url(\"/fonts/Lobster-Regular.ttf\") format(\"truetype\"),url(\"/fonts/Lobster-Regular.svg#Lobster-Regular\") format(\"svg\");font-style:normal;font-weight:normal}@font-face{font-family:\"PoiretOne-Regular\";src:url(\"/fonts/PoiretOne-Regular.eot\");src:url(\"/fonts/PoiretOne-Regular.eot?#iefix\") format(\"embedded-opentype\"),url(\"/fonts/PoiretOne-Regular.woff\") format(\"woff\"),url(\"/fonts/PoiretOne-Regular.ttf\") format(\"truetype\"),url(\"/fonts/PoiretOne-Regular.svg#PoiretOne-Regular\") format(\"svg\");font-style:normal;font-weight:normal}@font-face{font-family:\"JosefinSans-Thin\";src:url(\"/fonts/JosefinSans-Thin.eot\");src:url(\"/fonts/JosefinSans-Thin.eot?#iefix\") format(\"embedded-opentype\"),url(\"/fonts/JosefinSans-Thin.woff\") format(\"woff\"),url(\"/fonts/JosefinSans-Thin.ttf\") format(\"truetype\"),url(\"/fonts/JosefinSans-Thin.svg#JosefinSans-Thin\") format(\"svg\");font-style:normal;font-weight:normal}/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:bold}dfn{font-style:italic}h1{font-size:2em;margin:0.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-0.5em}sub{bottom:-0.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace, monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=\"button\"],input[type=\"reset\"],input[type=\"submit\"]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=\"checkbox\"],input[type=\"radio\"]{box-sizing:border-box;padding:0}input[type=\"number\"]::-webkit-inner-spin-button,input[type=\"number\"]::-webkit-outer-spin-button{height:auto}input[type=\"search\"]{-webkit-appearance:textfield;box-sizing:content-box}input[type=\"search\"]::-webkit-search-cancel-button,input[type=\"search\"]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid #c0c0c0;margin:0 2px;padding:0.35em 0.625em 0.75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:bold}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}body,.smooth-container{scroll-behavior:smooth}html,body{font-family:PingFangSC-Regular,'Roboto', Verdana, \"Open Sans\", \"Helvetica Neue\", \"Helvetica\", \"Hiragino Sans GB\", \"Microsoft YaHei\", \"Source Han Sans CN\", \"WenQuanYi Micro Hei\", Arial, sans-serif;-webkit-font-smoothing:antialiased;-webkit-tap-highlight-color:rgba(0,0,0,0);width:100%}html{overflow:hidden;overflow-y:auto}code,pre,samp{font-family:PingFangSC-Regular, 'Roboto', Verdana, \"Open Sans\", \"Helvetica Neue\", \"Helvetica\", \"Hiragino Sans GB\", \"Microsoft YaHei\", \"Source Han Sans CN\", \"WenQuanYi Micro Hei\", Arial, sans-serif}*{box-sizing:border-box}a{text-decoration:none}a:hover{text-decoration:none}ul{line-height:1.8em;padding:0;list-style:none}ul li{list-style:none}.text-center{text-align:center}@media screen and (max-width: 767px){html,body{overflow-x:hidden}}code{padding:3px 6px;vertical-align:middle;border-radius:4px;background-color:#f7f7f7;color:#e96900}figure.highlight{display:block;overflow-x:auto;margin:0 0 15px;padding:16px;color:#555;font-size:14px;border-radius:6px;background-color:#f7f7f7;overflow-y:hidden}.highlight pre{line-height:1.5em;overflow-y:hidden;white-space:pre-wrap;word-wrap:break-word}.highlight .gutter pre{padding-right:30px;text-align:right;border:0;background-color:transparent}.highlight .code{width:100%}.highlight figcaption{font-size:.8em;color:#999}.highlight figcaption a{float:right}.highlight table{width:100%;margin:0;border:0}.highlight table td,.highlight table th{border:0;color:#555;font-size:14px;padding:0}.highlight pre{margin:0;background-color:transparent}.highlight .comment,.highlight .meta{color:#b3b3b3}.highlight .string,.highlight .value,.highlight .variable,.highlight .template-variable,.highlight .strong,.highlight .emphasis,.highlight .quote,.highlight .inheritance,.highlight.ruby .symbol,.highlight.xml .cdata{color:#1abc9c}.highlight .keyword,.highlight .selector-tag,.highlight .type,.highlight.javascript .function{color:#e96900}.highlight .preprocessor,.highlight .built_in,.highlight .params,.highlight .constant,.highlight .symbol,.highlight .bullet,.highlight .attribute,.highlight.css .hexcolor{color:#1abc9c}.highlight .number,.highlight .literal{color:#ae81ff}.highlight .section,.highlight .header,.highlight .name,.highlight .function,.highlight.python .decorator,.highlight.python .title,.highlight.ruby .function .title,.highlight.ruby .title .keyword,.highlight.perl .sub,.highlight.javascript .title,.highlight.coffeescript .title{color:#525252}.highlight .tag,.highlight .regexp{color:#2973b7}.highlight .title,.highlight .attr,.highlight .selector-id,.highlight .selector-class,.highlight .selector-attr,.highlight .selector-pseudo,.highlight.ruby .constant,.highlight.xml .tag .title,.highlight.xml .pi,.highlight.xml .doctype,.highlight.html .doctype,.highlight.css .id,.highlight.css .pseudo,.highlight .class,.highlight.ruby .class .title{color:#2973b7}.highlight.css .code .attribute{color:#e96900}.highlight.css .class{color:#525252}.tag .attribute{color:#e96900}.highlight .addition{color:#55a532;background-color:#eaffea}.highlight .deletion{color:#bd2c00;background-color:#ffecec}.highlight .link{text-decoration:underline}.function .keyword{color:#0092db}.function .params{color:#525252}.function .title{color:#525252}.hide{display:none}.show{display:block}.content{width:500px;margin:40px auto 80px;border-left:4px solid #f9f9f9}.content.content-archive .toolbox,.content.content-about .toolbox,.content.content-search .toolbox,.content.content-project .toolbox,.content.content-link .toolbox,.content.content-category .toolbox,.content.content-tag .toolbox{margin-bottom:15px;margin-left:-20px}.disqus-comments{margin-top:40px}@media screen and (max-width: 767px){.content.content-post,.content.content-about,.content.content-search,.content.content-project,.content.content-link,.content.content-category,.content.content-tag,.content.content-archive{overflow-x:hidden;width:100%;margin-top:30px;padding-right:10px;padding-left:12px}.content.content-post{padding:0}.content.content-category .list-post,.content.content-tag .list-post{border-left:none}.content.content-category .list-post .item-title:before,.content.content-category .list-post .item-post:before,.content.content-tag .list-post .item-title:before,.content.content-tag .list-post .item-post:before{display:none}.content.content-category .list-post .item-title,.content.content-category .list-post .item-post,.content.content-tag .list-post .item-title,.content.content-tag .list-post .item-post{padding-left:0}}@media only screen and (min-device-width: 768px) and (max-device-width: 1024px){.content.content-tag,.content.content-post,.content.content-category{width:95%}}.article-content h1,.article-content h2,.article-content h3,.article-content h4,.article-content h5,.article-content h6{font-weight:normal;margin:28px 0 15px;color:#000}.article-content h1{font-size:24px}.article-content h2{font-size:20px}.article-content h3{font-size:16px}.article-content h4{font-size:14px}.article-content a{color:#1abc9c}.article-content a:hover{color:#148f77}.article-content strong{color:#000}.article-content a strong{color:#1abc9c}.article-content p{font-size:15px;line-height:2em;margin-bottom:20px;color:#555}.article-content ol,.article-content ul{font-size:15px;color:#555}.article-content img{max-width:100%;height:auto}.article-content ul li{position:relative;padding-left:14px}.article-content ul li:before{position:absolute;top:12px;left:-2px;width:4px;height:4px;margin-left:2px;content:' ';border-radius:50%;background:#bbb}.article-content p+ul{margin-top:-10px}.article-content ul+p{margin-top:25px}.article-content ol{padding-left:20px}.article-content blockquote{margin:0;padding:2px 30px;color:#555;border-left:6px solid #eee;background:#fafafa}html.bg{background-color:transparent;background-size:cover;background-position:center center;background-repeat:no-repeat}.content-home{position:absolute;top:50%;width:100%;height:100%;height:300px;margin-top:-150px;margin-bottom:100px}.content-home .avatar img{display:inline-block;width:100px;height:100px;border-radius:50%;-o-object-fit:cover;object-fit:cover;overflow:hidden}.content-home .name{font-size:26px;font-weight:bold;font-style:normal;line-height:50px;height:50px;margin:0 auto;letter-spacing:-.03em}.content-home .slogan{font-size:16px;font-weight:200;margin-bottom:26px;color:#666}.content-home .nav{color:#bbb}.content-home .nav .item{display:inline-block}.content-home .nav .item a{font-size:14px;display:inline-block;text-align:center;text-decoration:none;color:#000;transition-duration:0.5s;transition-propety:background-color}.content-home .nav .item a:hover{color:#1abc9c}.content-home .nav .item:last-child span{display:none}@media (max-width: 640px){.content-home .title{font-size:3rem;font-weight:100;letter-spacing:-.05em}}hr{max-width:400px;height:1px;margin-top:-1px;border:none;background-image:linear-gradient(0deg, transparent, #d5d5d5, transparent);background-image:-webkit-linear-gradient(0deg, transparent, #d5d5d5, transparent)}html.dark hr{display:block}html.dark .content-home .name{color:#fff}html.dark .content-home .slogan{color:#fff}html.dark .content-home .nav{color:#fff}html.dark .content-home .nav .item a{color:#fff}html.dark .content-home .nav .item a:hover{color:#1abc9c}.content.content-category{margin-bottom:100px}.content.content-about .about-list{margin-left:-2px}.content.content-about .about-list .about-item{position:relative;padding:10px 0}.content.content-about .about-list .about-item .text{padding-left:20px}.content.content-about a.text-value-url{color:#1abc9c}.content.content-about a.text-value-url:hover{color:#148f77}.content.content-about .dot{position:absolute;top:50%;width:10px;height:10px;margin-top:-5px;margin-left:-5px;content:' ';border-radius:50%}.content.content-about .dot.icon{font-size:12px;line-height:20px;width:20px;height:20px;margin-top:-10px;margin-left:-10px;padding-left:2px;color:rgba(255,255,255,0.6)}.content.content-about .dot.dot-0{background:#1abc9c}.content.content-about .dot.dot-1{background:#3498db}.content.content-about .dot.dot-2{background:#9b59b6}.content.content-about .dot.dot-3{background:#e67e22}.content.content-about .dot.dot-4{background:#e74c3c}@media screen and (min-width: 768px){.content.content-about{width:500px}}@media screen and (max-width: 767px){.content.content-about .about-list{margin-left:0;border-left:4px solid #f9f9f9}.content.content-about .about-list .dot.icon{margin-left:-12px}}.content.content-search .wrap-search-box{position:relative;padding-left:20px;margin-bottom:40px}.content.content-search .wrap-search-box:before{position:absolute;top:50%;left:-2px;width:8px;height:8px;margin-top:-4px;margin-left:-4px;content:' ';border-radius:50%;background:#ddd}.content.content-search .wrap-search-box .search-box{position:relative;background:#f0f0f0;height:36px;border-radius:36px;width:400px;overflow:hidden}.content.content-search .wrap-search-box .search-box .input-search{position:relative;border:none;width:100%;height:100%;padding-left:32px;background:transparent}.content.content-search .wrap-search-box .search-box .input-search:focus{outline:none}.content.content-search .wrap-search-box .search-box .icon-search{position:absolute;top:0;left:2px;width:30px;height:36px;line-height:36px;text-align:center;border-radius:36px;color:#bbb}.content.content-search .list-search .tip{padding-left:20px;color:#999}.content.content-search .list-search .item .color-hightlight{color:red}.content.content-search .list-search .item .title{font-size:18px;font-weight:bold;transition-duration:0.5s;color:#333;vertical-align:middle;max-width:430px;transition-propety:background-color;margin:30px 0px 0px}.content.content-search .list-search .item .title:hover{color:#1abc9c}.content.content-search .list-search .item a{position:relative;display:block;padding-left:20px}.content.content-search .list-search .item a:before{position:absolute;top:50%;left:-2px;width:8px;height:8px;margin-top:-4px;margin-left:-4px;content:' ';border-radius:50%;background:#ddd}.content.content-search .list-search .item .post-content{padding-left:20px;color:#555}.content.content-search .list-search .item .post-content>*{font-size:14px !important}@media screen and (min-width: 768px){.content.content-search{width:500px}}@media screen and (max-width: 767px){.content.content-search .wrap-search-box{padding-left:0;margin-bottom:40px}.content.content-search .wrap-search-box:before{display:none}.content.content-search .wrap-search-box .search-box{width:100%}.content.content-search .list-search .tip{padding-left:0}.content.content-search .list-search .item .title{font-size:18px}.content.content-search .list-search .item a{padding-left:0}.content.content-search .list-search .item a:before{display:none}.content.content-search .list-search .item .post-content{padding-left:0}}.post-header{margin:0 auto;padding-top:20px}.post-header.LEFT{width:720px;border-left:4px solid #f0f0f0}.post-header.CENTER{width:4px;background:#f0f0f0}.post-header .toolbox{margin-top:-40px;margin-left:-18px;background:#fff;transition-duration:0.5s;transition-propety:transform}.post-header .toolbox:hover{-webkit-transform:translate(0, 30px);transform:translate(0, 30px)}.post-header .toolbox .toolbox-entry .icon-angle-down{margin-top:16px;display:inline-block;line-height:0;font-size:22px;border-radius:50%}.post-header .toolbox .toolbox-entry .toolbox-entry-text{display:none}.content.content-post{border-left:none;margin:50px auto}.content.content-post.CENTER .article-header{text-align:center}.content.content-post .article-header{margin-bottom:40px}.content.content-post .article-header .post-title{font-size:32px;font-weight:normal;margin:0 0 12px;color:#000}.content.content-post .article-header .article-meta{font-size:12px;margin-top:8px;margin-bottom:30px;color:#999}.content.content-post .article-header .article-meta a{color:#999}.content.content-post .article-header .article-meta>span>*{vertical-align:middle}.content.content-post .article-header .article-meta i{display:inline-block;margin:0 -4px 0 4px}@media screen and (min-width: 768px){.content.content-post{width:760px;margin-top:60px}}@media screen and (max-width: 767px){.post-header{display:none}.content.content-post .article-content,.content.content-post .post-title{padding-right:10px;padding-left:10px}.content.content-post .article-header .post-title{font-size:24px}.content.content-archive .archive-body{border-left:none}.content.content-archive .archive-body .item-title:before,.content.content-archive .archive-body .item-post:before{display:none}.content.content-archive .archive-body .item-year,.content.content-archive .archive-body .item-post{padding-left:0}}@media only screen and (min-device-width: 768px) and (max-device-width: 1024px){.content.content-post{width:95%}}.content.content-link .link-list .link-item{position:relative;margin-left:-23px;padding:8px 0}.content.content-link .link-list .link-item a{display:block;color:#444}.content.content-link .link-list .link-item a .avatar,.content.content-link .link-list .link-item a .wrap-info{display:inline-block;vertical-align:middle}.content.content-link .link-list .link-item a .avatar{width:44px;height:44px;border-radius:50%}.content.content-link .link-list .link-item a .avatar:hover{opacity:.8}.content.content-link .link-list .link-item a .wrap-info{line-height:1.3em}.content.content-link .link-list .link-item a .wrap-info .name{font-weight:bold}.content.content-link .link-list .link-item a .wrap-info .name:hover{color:#1abc9c}.content.content-link .link-list .link-item a .wrap-info .info{font-size:13px;color:#999;min-width:240px}.content.content-link .tip{margin:20px 0 0 -15px;color:#ddd}.content.content-link .tip i,.content.content-link .tip span{vertical-align:middle}.content.content-link .tip .icon-mail{width:24px;height:24px;text-align:center;line-height:24px;border-radius:50%;color:#fff;background:#f0f0f0;font-size:12px;display:inline-block;padding-left:1px}@media screen and (min-width: 768px){.content.content-link{width:500px}.content.content-link hr{display:none;height:0}}@media screen and (max-width: 767px){.content.content-link{width:100%}.content.content-link .link-list .link-item{position:relative;margin-left:0;padding:8px 0 8px 10px}}.content.content-project .project-list{margin-left:-2px}.content.content-project .project-list .project-item{position:relative;padding:10px 0}.content.content-project .project-list .project-item .text{padding-left:20px}.content.content-project .project-list .img-article-wrapper{display:grid;grid-gap:10px;grid-template-areas:\"media\" \"detail\"}.content.content-project .project-list .img-article-wrapper .project-media{grid-area:media}.content.content-project .project-list .img-article-wrapper .project-detail{grid-area:detail}@media (min-width: 500px){.content.content-project .project-list .img-article-wrapper{grid-template-columns:2fr 1fr;grid-template-areas:\"media  detail\"}}.content.content-project img.project-img{display:block;width:100%}.content.content-project a.project-url{color:#1abc9c}.content.content-project a.project-url:hover{color:#148f77}.content.content-project .intro{color:#666}.content.content-project .dot{position:absolute;top:50%;width:10px;height:10px;margin-top:-5px;margin-left:-5px;content:' ';border-radius:50%}.content.content-project .dot.icon{font-size:12px;line-height:20px;width:20px;height:20px;margin-top:-10px;margin-left:-10px;padding-left:2px;color:rgba(255,255,255,0.6)}.content.content-project .dot.dot-0{background:#1abc9c}.content.content-project .dot.dot-1{background:#3498db}.content.content-project .dot.dot-2{background:#9b59b6}.content.content-project .dot.dot-3{background:#e67e22}.content.content-project .dot.dot-4{background:#e74c3c}@media screen and (min-width: 768px){.content.content-project{width:500px}}@media screen and (max-width: 767px){.content.content-project .project-list{margin-left:0}}table{width:100%;max-width:100%;border:1px solid #dfdfdf;margin-bottom:30px}table>thead>tr>th,table>thead>tr>td{border-bottom-width:2px}table td,table th{line-height:1.5;padding:8px;text-align:left;vertical-align:top;color:#555;border:1px solid #dfdfdf;font-size:15px}.page-header{position:relative;margin-bottom:30px;background:#fff}.page-header .breadcrumb{width:100px;font-size:16px;margin-bottom:10px;margin-left:-52px;color:#d0d0d0;text-align:center}.page-header .breadcrumb .location{margin-left:0;font-size:13px}.page-header .breadcrumb i{font-size:26px;color:#dfdfdf}.page-header .box-blog-info{display:block}.page-header .box-blog-info .avatar,.page-header .box-blog-info .info{display:inline-block;vertical-align:middle}.page-header .box-blog-info img{width:60px;height:60px;vertical-align:middle;border-radius:50%;-o-object-fit:cover;object-fit:cover;overflow:hidden}.page-header .box-blog-info .info .name{font-size:24px;font-weight:bold;margin:0;color:#000}.page-header .box-blog-info .info .slogan{display:inline-block;color:#999}@media screen and (min-width: 768px){.page-header{margin-bottom:30px}.page-header .home-entry{display:inline-block}.page-header .box-blog-info{display:block;margin-left:-30px}}@media screen and (max-width: 767px){.page-header{margin-bottom:30px;text-align:center}.page-header .breadcrumb{display:none}.page-header .home-entry{display:none}.page-header .box-blog-info .avatar{display:block}.page-header .box-blog-info .avatar img{width:60px;height:60px;vertical-align:middle;border-radius:50%}.page-header .box-blog-info .info{display:inline-block}.page-header .box-blog-info .info .name{display:inline-block;margin-top:10px;margin-bottom:8px}.page-header .box-blog-info .info .slogan{display:block}}.pagination .page-nav .page-number{font-family:'calligraffittiregular';font-size:15px;font-weight:bolder;line-height:33px;display:inline-block;width:28px;height:28px;margin:auto 6px;text-align:center;color:#444;border-radius:50%}.pagination .page-nav .page-number:hover,.pagination .page-nav .page-number.current{color:#444;background:#f0f0f0}.pagination .page-nav .space{letter-spacing:2px}.pagination .page-nav .extend{font-size:20px;line-height:25px;display:inline-block;width:28px;height:28px;text-align:center;color:#444;border-radius:50%;transition-duration:.5s;transition-propety:background-color}.pagination .page-nav .extend:hover{color:#444;background:#f0f0f0}.list-post{line-height:2.8em}.item-title{position:relative;margin-top:40px;padding-left:20px}.item-title:before{position:absolute;top:50%;left:-2px;width:10px;height:10px;margin-top:-9px;margin-left:-5px;content:' ';border-radius:50%}.item-title.item-title-0:before{background:#1abc9c}.item-title.item-title-1:before{background:#3498db}.item-title.item-title-2:before{background:#9b59b6}.item-title.item-title-3:before{background:#e67e22}.item-title.item-title-4:before{background:#e74c3c}.item-post{position:relative;padding-left:20px}.item-post:before{position:absolute;top:50%;left:-2px;width:8px;height:8px;margin-top:-4px;margin-left:-4px;content:' ';border-radius:50%;background:#ddd}.item-post .post-date{font-size:12px;display:inline-block;color:#888}.item-post .post-title{font-size:16px;font-weight:normal;position:relative;display:inline-block;transition-duration:.5s;color:#333;vertical-align:middle;text-overflow:ellipsis;max-width:430px;white-space:nowrap;overflow:hidden;transition-propety:background-color}.item-post .post-title:hover{color:#1abc9c}@media screen and (min-width: 400px) and (max-width: 500px){.item-post .post-title{max-width:330px}}@media screen and (min-width: 320px) and (max-width: 399px){.item-post .post-title{max-width:250px}}@media screen and (max-width: 319px){.item-post .post-title{max-width:200px}}.item-year{position:relative;margin-top:40px;padding-left:20px}.item-year a.text-year{font-family:'calligraffittiregular';font-size:20px;font-weight:bold;font-weight:bold;color:#222}.item-category-name{position:relative;margin-top:40px;padding-left:20px}.item-category-name .category-count{font-family:'calligraffittiregular';font-size:16px;font-weight:bold}.toolbox{position:relative;width:60px;height:40px;border-radius:20px;background:transparent}.toolbox:hover{width:200px}.toolbox:hover .toolbox-entry .icon-angle-down{display:none}.toolbox:hover .toolbox-entry .toolbox-entry-text{display:inline-block}.toolbox:hover .list-toolbox{display:block}.toolbox:hover .list-toolbox li a{-webkit-animation-duration:.8s;animation-duration:.8s;-webkit-animation-fill-mode:both;animation-fill-mode:both}.toolbox:hover .list-toolbox li:nth-child(1) a{-webkit-animation-name:fadeIn;animation-name:fadeIn}.toolbox:hover .list-toolbox li:nth-child(2) a{-webkit-animation-name:fadeIn;animation-name:fadeIn;-webkit-animation-delay:.1s;animation-delay:.1s}.toolbox:hover .list-toolbox li:nth-child(3) a{-webkit-animation-name:fadeIn;animation-name:fadeIn;-webkit-animation-delay:.2s;animation-delay:.2s}.toolbox:hover .list-toolbox li:nth-child(4) a{-webkit-animation-name:fadeIn;animation-name:fadeIn;-webkit-animation-delay:.3s;animation-delay:.3s}.toolbox:hover .list-toolbox li:nth-child(5) a{-webkit-animation-name:fadeIn;animation-name:fadeIn;-webkit-animation-delay:.4s;animation-delay:.4s}.toolbox:hover .list-toolbox li:nth-child(6) a{-webkit-animation-name:fadeIn;animation-name:fadeIn;-webkit-animation-delay:.5s;animation-delay:.5s}.toolbox:hover .list-toolbox li:nth-child(7) a{-webkit-animation-name:fadeIn;animation-name:fadeIn;-webkit-animation-delay:.6s;animation-delay:.6s}.toolbox:hover .list-toolbox li:nth-child(8) a{-webkit-animation-name:fadeIn;animation-name:fadeIn;-webkit-animation-delay:.7s;animation-delay:.7s}.toolbox .toolbox-entry{position:relative;font-size:13px;line-height:40px;display:block;width:40px;height:40px;margin-bottom:20px;transition-duration:.5s;text-align:center;color:#555;border-radius:50%;background:#f0f0f0;transition-propety:background-color}.toolbox .toolbox-entry .icon-angle-down{display:none}.toolbox .toolbox-entry .toolbox-entry-text{display:inline-block}.toolbox .toolbox-entry .icon-home{display:none;font-size:22px;color:#999}.toolbox .toolbox-entry:hover{cursor:pointer;background:#dfdfdf}.toolbox .toolbox-entry:hover .icon-angle-down,.toolbox .toolbox-entry:hover .toolbox-entry-text{display:none}.toolbox .toolbox-entry:hover .icon-home{display:inline-block}.toolbox .list-toolbox{position:absolute;top:-17px;left:46px;display:none;width:500px}.toolbox .list-toolbox .item-toolbox{display:inline-block}.toolbox .list-toolbox .item-toolbox a{font-size:13px;line-height:40px;display:inline-block;height:40px;margin-bottom:20px;transition-duration:.5s;text-align:center;color:#555;border-radius:20px;background:#f0f0f0;transition-propety:background-color}.toolbox .list-toolbox .item-toolbox a.CIRCLE{width:40px}.toolbox .list-toolbox .item-toolbox a.ROUND_RECT{padding:0 20px}.toolbox .list-toolbox .item-toolbox a:hover{background:#dfdfdf}@media screen and (max-width: 767px){.toolbox{display:none}}.toolbox-mobile{font-size:13px;line-height:40px;display:block;width:40px;height:40px;transition-duration:.5s;text-align:center;color:#555;border-radius:50%;background:#f0f0f0;position:fixed;left:12px;bottom:12px;z-index:10}@media screen and (min-width: 768px){.toolbox-mobile{display:none}}.tag-box{position:relative;margin-bottom:-20px;margin-left:-20px}.tag-box .tag-title{font-size:13px;line-height:40px;position:absolute;top:50%;width:40px;height:40px;margin-top:-20px;text-align:center;color:#555;border-radius:50%;background:#f0f0f0}.tag-box .tag-list{margin-left:50px}.tag-box .tag-list .tag-item{font-size:12px;line-height:30px;display:inline-block;height:30px;margin:5px 3px;padding:0 12px;color:#999;border-radius:15px;background:#f6f6f6}.tag-box .tag-list .tag-item:hover{color:#333;background:#f0f0f0}.tag-box .tag-list .tag-item .tag-size{font-family:'calligraffittiregular';font-weight:bold}@media screen and (max-width: 767px){.tag-box{margin-left:0}}.category-box{position:relative;margin-bottom:-20px;margin-left:-20px}.category-box .category-title{font-size:13px;line-height:40px;position:absolute;top:50%;width:40px;height:40px;margin-top:-20px;text-align:center;color:#555;border-radius:50%;background:#f0f0f0}.category-box .category-list{margin-left:50px}.category-box .category-list .category-item{font-size:12px;line-height:30px;display:inline-block;height:30px;margin:5px 3px;padding:0 12px;color:#999;border-radius:15px;background:#f6f6f6}.category-box .category-list .category-item:hover{color:#333;background:#f0f0f0}.category-box .category-list .category-item .category-size{font-family:'calligraffittiregular';font-weight:bold}@media screen and (max-width: 767px){.category-box{margin-left:0}}.toc-article{position:absolute;left:50%;margin-left:400px;top:200px;font-size:13px}.toc-article.fixed{position:fixed;top:20px}.toc-article ol{line-height:1.8em;padding-left:10px;list-style:none}.toc-article>li{margin:4px 0}.toc-article .toc-title{font-size:16px}.toc-article .toc{padding-left:0}.toc-article a.toc-link.active{color:#111;font-weight:bold}.toc-article a{color:#888}.toc-article a:hover{color:#6f6f6f}@media screen and (max-width: 1023px){.toc-article{display:none}}@media only screen and (min-device-width: 768px) and (max-device-width: 1024px){.toc-article{display:none}}a.back-top{position:fixed;bottom:40px;right:30px;background:#f0f0f0;height:40px;width:40px;border-radius:50%;line-height:34px;text-align:center;transition-duration:.5s;transition-propety:background-color;display:none}a.back-top.show{display:block}a.back-top i{color:#999;font-size:26px}a.back-top:hover{cursor:pointer;background:#dfdfdf}a.back-top:hover i{color:#666}@media screen and (max-width: 768px){a.back-top{display:none !important}}@media only screen and (min-device-width: 768px) and (max-device-width: 1024px){a.back-top{display:none !important}}.hint{position:relative;display:inline-block}.hint:before,.hint:after{position:absolute;z-index:1000000;transition:.5s ease;pointer-events:none;opacity:0}.hint:hover:before,.hint:hover:after{opacity:1}.hint:before{position:absolute;position:absolute;content:'';border:6px solid transparent;background:transparent}.hint:after{font-size:12px;line-height:32px;height:32px;padding:0 10px;content:'点击回首页';white-space:nowrap;color:#555;border-radius:4px;background:#f0f0f0}.hint--top:after{bottom:100%;left:50%;margin:0 0 -6px -10px}.hint--top:hover:before{margin-bottom:-10px}.hint--top:hover:after{margin-bottom:2px}.hint--bottom:before{top:100%;left:50%;margin:-14px 0 0 0;border-bottom-color:rgba(0,0,0,0.8)}.hint--bottom:after{top:100%;left:50%;margin:-2px 0 0 -10px}.hint--bottom:hover:before{margin-top:-6px}.hint--bottom:hover:after{margin-top:6px}.hint--right:before{bottom:50%;left:100%;margin:0 0 -4px -8px;border-right-color:rgba(0,0,0,0.8)}.hint--right:after{bottom:50%;left:100%;margin:0 0 -13px 4px}.hint--right:hover:before{margin:0 0 -4px -0}.hint--right:hover:after{margin:0 0 -13px 12px}.hint--left:before{right:100%;bottom:50%;margin:0 -8px -3px 0;border-left-color:#f0f0f0}.hint--left:after{right:100%;bottom:50%;margin:0 4px -13px 0}.hint--left:hover:before{margin:0 0 -3px 0}.hint--left:hover:after{margin:0 12px -13px 0}@media screen and (min-width: 768px){.fexo-comments{margin:0 auto 60px}.fexo-comments.comments-post{width:760px}.fexo-comments.comments-about{width:500px}.fexo-comments.comments-link{width:500px}}@media screen and (max-width: 767px){.fexo-comments{padding:10px}}.modal .cover{position:fixed;z-index:10;top:0;right:0;bottom:0;left:0;background:rgba(0,0,0,0.6)}.modal hr{max-width:320px;height:1px;margin-top:-1px;margin-bottom:0;border:none;background-image:linear-gradient(0deg, transparent, #dcdcdc, transparent);background-image:-webkit-linear-gradient(0deg, transparent, #dcdcdc, transparent)}.modal-dialog{position:fixed;z-index:11;bottom:0;width:100%;height:160px;transition:.3s ease-out;background:#fefefe}.modal-dialog.show-dialog{-webkit-transform:translate3d(0, 0, 0);transform:translate3d(0, 0, 0)}.modal-dialog.hide-dialog{-webkit-transform:translate3d(0, 100%, 0);transform:translate3d(0, 100%, 0)}.modal-body{height:70px;display:table;text-align:center;width:100%}.modal-body .list-toolbox{text-align:center;display:table-cell;vertical-align:middle}.modal-body .list-toolbox .item-toolbox{display:inline-block}.modal-body .list-toolbox .item-toolbox a{font-size:13px;line-height:40px;display:inline-block;height:40px;margin:5px 2px;transition-duration:.5s;text-align:center;color:#555;border-radius:20px;background:#f0f0f0;transition-propety:background-color}.modal-body .list-toolbox .item-toolbox a.CIRCLE{width:40px}.modal-body .list-toolbox .item-toolbox a.ROUND_RECT{padding:0 20px}.modal-body .list-toolbox .item-toolbox a:hover{background:#dfdfdf}.modal-header{font-size:13px;text-align:center;height:75px}.modal-header .btn-close{position:relative;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%);font-size:13px;line-height:40px;display:inline-block;width:40px;height:40px;transition-duration:.5s;text-align:center;text-decoration:none;color:#555;border-radius:20px;background:#f0f0f0}.modal-header .btn-close:hover{color:#919191}.btn-close:hover,.toolbox-mobile:hover{cursor:pointer}.donation{margin-top:40px}.donation .inner-donation{position:relative;width:160px;margin:auto}.donation .inner-donation:hover .donation-body{display:inline-block}.donation .btn-donation{display:inline-block;border:1px solid #dfdfdf;height:40px;width:140px;line-height:40px;border-radius:40px;padding:0;color:#aaa}.donation .btn-donation:hover{border:1px solid #ddd;color:#999;cursor:pointer}.donation .donation-body{display:none;position:absolute;box-shadow:0 4px 12px rgba(0,0,0,0.15);border-radius:4px;background:#fff;width:460px;height:292px;margin-top:-277px;margin-left:-300px}.donation .donation-body:before{content:\"\";display:block;position:absolute;width:0;height:0;border-color:transparent;border-width:6px;border-style:solid;box-sizing:border-box;border-top-color:#fff;top:100%;left:223px}.donation .donation-body .tip{height:40px;line-height:40px;color:#999;border-bottom:1px solid #f3f3f3}.donation .donation-body ul{display:inline-block}.donation .donation-body ul .item{width:220px;height:220px;display:inline-block}.donation .donation-body ul .item img{width:150px;height:150px}.box-prev-next{margin-top:-40px;margin-bottom:70px}.box-prev-next a,.box-prev-next .icon{display:inline-block}.box-prev-next a{text-align:center;line-height:36px;width:36px;height:36px;border-radius:50%;border:1px solid #dfdfdf}.box-prev-next a.pull-left{float:left}.box-prev-next a.pull-left .icon:before{margin-right:0.28em !important}.box-prev-next a.pull-right{float:right}.box-prev-next a.pull-right .icon:before{margin-left:0.28em !important}.box-prev-next a.hide{display:none !important}.box-prev-next a.show{display:block !important}.box-prev-next .icon{color:#ccc;font-size:24px;height:34px;line-height:34px}.box-prev-next .icon:hover{color:#bfbfbf}\n\n/*# sourceMappingURL=styles.css.map */\n","categories":[],"tags":[]}]